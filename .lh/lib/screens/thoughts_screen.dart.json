{
    "sourceFile": "lib/screens/thoughts_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 346,
            "patches": [
                {
                    "date": 1645280610194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1645280652062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,10 @@\n+import 'package:card_swiper/card_swiper.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:flutter/services.dart';\r\n \r\n+import '../themeclass.dart';\r\n+\r\n class ThoughtsScreen extends StatefulWidget {\r\n   ThoughtsScreen({Key? key}) : super(key: key);\r\n \r\n   @override\r\n@@ -9,7 +13,48 @@\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Container();\r\n+   return Scaffold(\r\n+      appBar: AppBar(\r\n+        backgroundColor: ThemeClass.redColor,\r\n+        title: Text(\"Tahuka App \"),\r\n+        actions: [const Icon(Icons.more_vert)],\r\n+      ),\r\n+      body: Swiper(\r\n+        itemBuilder: (BuildContext context, int index) {\r\n+          return GestureDetector(\r\n+            onLongPress: () {\r\n+              Clipboard.setData(ClipboardData(text: \"your text\"));\r\n+              ScaffoldMessenger.of(context).showSnackBar(\r\n+                SnackBar(\r\n+                  content: Text(\"Text copied to clipboard\"),\r\n+                ),\r\n+              );\r\n+            },\r\n+            child: Container(\r\n+              decoration: BoxDecoration(\r\n+                  color: ThemeClass.pinkColor,\r\n+                  border: Border.all(color: Colors.red.shade400),\r\n+                  borderRadius: BorderRadius.circular(12.0)),\r\n+              child: Center(\r\n+                  child: Column(\r\n+                crossAxisAlignment: CrossAxisAlignment.center,\r\n+                children: [\r\n+                  const Text(\"data\"),\r\n+                ],\r\n+              )),\r\n+            ),\r\n+          );\r\n+\r\n+          //  Image.network(\"https://via.placeholder.com/350x150\",fit: BoxFit.fill,);\r\n+        },\r\n+        itemCount: 5,\r\n+        itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n+        itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n+        layout: SwiperLayout.TINDER,\r\n+        pagination: SwiperPagination(),\r\n+        control: SwiperControl(),\r\n+      ),\r\n+    );\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645280689046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,10 @@\n \r\n import '../themeclass.dart';\r\n \r\n class ThoughtsScreen extends StatefulWidget {\r\n-  ThoughtsScreen({Key? key}) : super(key: key);\r\n+  ThoughtsScreen({Key? key, required this.categoryName}) : super(key: key);\r\n+  final String? categoryName;\r\n \r\n   @override\r\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n"
                },
                {
                    "date": 1645435668784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n \r\n import '../themeclass.dart';\r\n \r\n class ThoughtsScreen extends StatefulWidget {\r\n-  ThoughtsScreen({Key? key, required this.categoryName}) : super(key: key);\r\n-  final String? categoryName;\r\n+  ThoughtsScreen({Key? key, required this.id}) : super(key: key);\r\n+  final String? id;\r\n \r\n   @override\r\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n@@ -40,9 +40,9 @@\n               child: Center(\r\n                   child: Column(\r\n                 crossAxisAlignment: CrossAxisAlignment.center,\r\n                 children: [\r\n-                  const Text(\"data\"),\r\n+                   Text(widget.id.toString()),\r\n                 ],\r\n               )),\r\n             ),\r\n           );\r\n"
                },
                {
                    "date": 1645437057246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,48 +14,61 @@\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-   return Scaffold(\r\n+    return Scaffold(\r\n       appBar: AppBar(\r\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n-      body: Swiper(\r\n-        itemBuilder: (BuildContext context, int index) {\r\n-          return GestureDetector(\r\n-            onLongPress: () {\r\n-              Clipboard.setData(ClipboardData(text: \"your text\"));\r\n-              ScaffoldMessenger.of(context).showSnackBar(\r\n-                SnackBar(\r\n-                  content: Text(\"Text copied to clipboard\"),\r\n-                ),\r\n+      body: FutureBuilder(\r\n+          future: getData(),\r\n+          builder: (context, snapshot) {\r\n+            if (snapshot.connectionState == ConnectionState.done) {\r\n+              return Swiper(\r\n+                itemBuilder: (BuildContext context, int index) {\r\n+                  return GestureDetector(\r\n+                    onLongPress: () {\r\n+                      Clipboard.setData(ClipboardData(text: \"your text\"));\r\n+                      ScaffoldMessenger.of(context).showSnackBar(\r\n+                        SnackBar(\r\n+                          content: Text(\"Text copied to clipboard\"),\r\n+                        ),\r\n+                      );\r\n+                    },\r\n+                    child: Container(\r\n+                      decoration: BoxDecoration(\r\n+                          color: ThemeClass.pinkColor,\r\n+                          border: Border.all(color: Colors.red.shade400),\r\n+                          borderRadius: BorderRadius.circular(12.0)),\r\n+                      child: Center(\r\n+                          child: Column(\r\n+                        crossAxisAlignment: CrossAxisAlignment.center,\r\n+                        children: [\r\n+                          Text(widget.id.toString()),\r\n+                        ],\r\n+                      )),\r\n+                    ),\r\n\\ No newline at end of file\n+                  );\r\n+\r\n+            \r\n+                },\r\n+                itemCount: 5,\r\n+                itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n+                itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n+                layout: SwiperLayout.TINDER,\r\n+                pagination: SwiperPagination(),\r\n+                control: SwiperControl(),\r\n               );\r\n-            },\r\n-            child: Container(\r\n-              decoration: BoxDecoration(\r\n-                  color: ThemeClass.pinkColor,\r\n-                  border: Border.all(color: Colors.red.shade400),\r\n-                  borderRadius: BorderRadius.circular(12.0)),\r\n-              child: Center(\r\n-                  child: Column(\r\n-                crossAxisAlignment: CrossAxisAlignment.center,\r\n-                children: [\r\n-                   Text(widget.id.toString()),\r\n-                ],\r\n-              )),\r\n-            ),\r\n-          );\r\n-\r\n-          //  Image.network(\"https://via.placeholder.com/350x150\",fit: BoxFit.fill,);\r\n-        },\r\n-        itemCount: 5,\r\n-        itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n-        itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n-        layout: SwiperLayout.TINDER,\r\n-        pagination: SwiperPagination(),\r\n-        control: SwiperControl(),\r\n-      ),\r\n+            }\r\n+            else if(snapshot.connectionState == ConnectionState.none){\r\n+                return Text(\"No data\");\r\n+            }\r\n+            return CircularProgressIndicator(); \r\n+          }),\r\n+          \r\n     );\r\n   }\r\n-}\n+\r\n+  getData() {}\r\n+}\r\n"
                },
                {
                    "date": 1645437212806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n                   );\r\n \r\n             \r\n                 },\r\n-                itemCount: 5,\r\n+                itemCount: 2,\r\n                 itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n@@ -70,5 +70,5 @@\n     );\r\n   }\r\n \r\n   getData() {}\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1645437279369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import 'package:card_swiper/card_swiper.dart';\r\n+import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n \r\n import '../themeclass.dart';\r\n@@ -12,8 +13,9 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n+   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n@@ -69,6 +71,10 @@\n           \r\n     );\r\n   }\r\n \r\n-  getData() {}\r\n+  Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n+\r\n+return \r\n+\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1645437491102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,10 +71,10 @@\n           \r\n     );\r\n   }\r\n \r\n-  Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n+  Future<DocumentSnapshot<Map<String, dynamic>>> getData() {\r\n \r\n-return \r\n+return  fb.collection(\"quotes\").doc(widget.id).get();\r\n \r\n   }\r\n }\r\n"
                },
                {
                    "date": 1645437733219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(widget.id.toString()),\r\n+                          Text(snapshot.data.toString()),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1645438513644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(snapshot.data.toString()),\r\n+                          Text(snapshot.data.),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n@@ -71,10 +71,16 @@\n           \r\n     );\r\n   }\r\n \r\n-  Future<DocumentSnapshot<Map<String, dynamic>>> getData() {\r\n+  Stream<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n+    var data = fb\r\n+        .collection(\"quotes\")\r\n+        .doc(widget.id)\r\n+        .collection('sweetlines')\r\n+        .snapshots();\r\n+    return data;\r\n \r\n-return  fb.collection(\"quotes\").doc(widget.id).get();\r\n \r\n+\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1645438699840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,10 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(snapshot.data.),\r\n+                          Text( snapshot.data.toString(),\r\n+            ),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1645438754292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,19 +13,19 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n-   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n+  final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n-      body: FutureBuilder(\r\n-          future: getData(),\r\n+      body: StreamBuilder(\r\n+          stream: getData(),\r\n           builder: (context, snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n@@ -46,31 +46,28 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text( snapshot.data.toString(),\r\n-            ),\r\n+                          Text(\r\n+                            snapshot.data.toString(),\r\n+                          ),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n-\r\n-            \r\n                 },\r\n                 itemCount: 2,\r\n                 itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n                 control: SwiperControl(),\r\n               );\r\n+            } else if (snapshot.connectionState == ConnectionState.none) {\r\n+              return Text(\"No data\");\r\n             }\r\n-            else if(snapshot.connectionState == ConnectionState.none){\r\n-                return Text(\"No data\");\r\n-            }\r\n-            return CircularProgressIndicator(); \r\n+            return CircularProgressIndicator();\r\n           }),\r\n-          \r\n     );\r\n   }\r\n \r\n   Stream<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n@@ -79,9 +76,6 @@\n         .doc(widget.id)\r\n         .collection('sweetlines')\r\n         .snapshots();\r\n     return data;\r\n-\r\n-\r\n-\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1645439012871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n+  var data ;\r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n@@ -47,9 +48,9 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Text(\r\n-                            snapshot.data.toString(),\r\n+                            data['quotes'],\r\n                           ),\r\n                         ],\r\n                       )),\r\n                     ),\r\n@@ -70,9 +71,9 @@\n     );\r\n   }\r\n \r\n   Stream<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n-    var data = fb\r\n+     data = fb\r\n         .collection(\"quotes\")\r\n         .doc(widget.id)\r\n         .collection('sweetlines')\r\n         .snapshots();\r\n"
                },
                {
                    "date": 1645439227075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,13 @@\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n           stream: getData(),\r\n+        \r\n           builder: (context, snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n+                \r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n@@ -50,8 +52,9 @@\n                         children: [\r\n                           Text(\r\n                             data['quotes'],\r\n                           ),\r\n+                          \r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n@@ -61,8 +64,9 @@\n                 itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n                 control: SwiperControl(),\r\n+                \r\n               );\r\n             } else if (snapshot.connectionState == ConnectionState.none) {\r\n               return Text(\"No data\");\r\n             }\r\n@@ -76,7 +80,9 @@\n         .collection(\"quotes\")\r\n         .doc(widget.id)\r\n         .collection('sweetlines')\r\n         .snapshots();\r\n+        print(data);\r\n     return data;\r\n+    \r\n   }\r\n }\r\n"
                },
                {
                    "date": 1645439308634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       ),\r\n       body: StreamBuilder(\r\n           stream: getData(),\r\n         \r\n-          builder: (context, snapshot) {\r\n+          builder: (context,AsyncSnapshot<QuerySnapshot>  snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 \r\n                 itemBuilder: (BuildContext context, int index) {\r\n"
                },
                {
                    "date": 1645439342095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Text(\r\n-                            data['quotes'],\r\n+                           snapshot.data!.docs[index].data()\r\n                           ),\r\n                           \r\n                         ],\r\n                       )),\r\n"
                },
                {
                    "date": 1645439421663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,11 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 \r\n                 itemBuilder: (BuildContext context, int index) {\r\n+                   final DocumentSnapshot ds;\r\n+                          ds = snapshot.data!.docs[index];\r\n+                          var doc = snapshot.data!.docs[index].data();\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -50,9 +53,9 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Text(\r\n-                           snapshot.data!.docs[index].data()\r\n+                           ds['quotes'].toString();\r\n                           ),\r\n                           \r\n                         ],\r\n                       )),\r\n"
                },
                {
                    "date": 1645439428215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n-  var data ;\r\n+  var data;\r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n@@ -25,17 +25,15 @@\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n           stream: getData(),\r\n-        \r\n-          builder: (context,AsyncSnapshot<QuerySnapshot>  snapshot) {\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n-                \r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                   final DocumentSnapshot ds;\r\n-                          ds = snapshot.data!.docs[index];\r\n-                          var doc = snapshot.data!.docs[index].data();\r\n+                  final DocumentSnapshot ds;\r\n+                  ds = snapshot.data!.docs[index];\r\n+                  var doc = snapshot.data!.docs[index].data();\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -53,11 +51,10 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Text(\r\n-                           ds['quotes'].toString();\r\n+                            ds['quotes'].toString(),\r\n                           ),\r\n-                          \r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n@@ -67,9 +64,8 @@\n                 itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n                 control: SwiperControl(),\r\n-                \r\n               );\r\n             } else if (snapshot.connectionState == ConnectionState.none) {\r\n               return Text(\"No data\");\r\n             }\r\n@@ -78,14 +74,13 @@\n     );\r\n   }\r\n \r\n   Stream<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n-     data = fb\r\n+    data = fb\r\n         .collection(\"quotes\")\r\n         .doc(widget.id)\r\n         .collection('sweetlines')\r\n         .snapshots();\r\n-        print(data);\r\n+    print(data);\r\n     return data;\r\n-    \r\n   }\r\n }\r\n"
                },
                {
                    "date": 1645439626017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n                   ds = snapshot.data!.docs[index];\r\n                   var doc = snapshot.data!.docs[index].data();\r\n+                  print(ds['quotes']);\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -53,8 +54,9 @@\n                         children: [\r\n                           Text(\r\n                             ds['quotes'].toString(),\r\n                           ),\r\n+                          \r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1645439945603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,13 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n-          stream: getData(),\r\n+          stream: fb\r\n+        .collection(\"quotes\")\r\n+        .doc(widget.id)\r\n+        .collection('sweetlines')\r\n+        .snapshots(),\r\n           builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n"
                },
                {
                    "date": 1645440091589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,12 +25,12 @@\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n           stream: fb\r\n-        .collection(\"quotes\")\r\n-        .doc(widget.id)\r\n-        .collection('sweetlines')\r\n-        .snapshots(),\r\n+              .collection(\"quotes\")\r\n+              .doc(widget.id)\r\n+              .collection('sweetlines')\r\n+              .snapshots(),\r\n           builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n@@ -58,9 +58,8 @@\n                         children: [\r\n                           Text(\r\n                             ds['quotes'].toString(),\r\n                           ),\r\n-                          \r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n@@ -74,8 +73,9 @@\n               );\r\n             } else if (snapshot.connectionState == ConnectionState.none) {\r\n               return Text(\"No data\");\r\n             }\r\n+           \r\n             return CircularProgressIndicator();\r\n           }),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1645440630572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,10 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n-          stream: fb\r\n-              .collection(\"quotes\")\r\n-              .doc(widget.id)\r\n-              .collection('sweetlines')\r\n-              .snapshots(),\r\n+          stream:getData(),\r\n+          \r\n           builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n@@ -83,9 +80,8 @@\n   Stream<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n     data = fb\r\n         .collection(\"quotes\")\r\n         .doc(widget.id)\r\n-        .collection('sweetlines')\r\n         .snapshots();\r\n     print(data);\r\n     return data;\r\n   }\r\n"
                },
                {
                    "date": 1645440718814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,12 +77,13 @@\n     );\r\n   }\r\n \r\n   Stream<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n-    data = fb\r\n-        .collection(\"quotes\")\r\n-        .doc(widget.id)\r\n-        .snapshots();\r\n-    print(data);\r\n+  data=   fb.collection(\"sweetlines\").get();\r\n+    // data = fb\r\n+    //     .collection(\"quotes\")\r\n+    //     .doc(widget.id)\r\n+    //     .snapshots();\r\n+    // print(data);\r\n     return data;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1645440837354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n-      body: StreamBuilder(\r\n-          stream:getData(),\r\n+      body: FutureBuilder(\r\n+          future:getData(),\r\n           \r\n           builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n@@ -76,9 +76,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  Stream<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n+  Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n   data=   fb.collection(\"sweetlines\").get();\r\n     // data = fb\r\n     //     .collection(\"quotes\")\r\n     //     .doc(widget.id)\r\n"
                },
                {
                    "date": 1645441030675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,13 +77,13 @@\n     );\r\n   }\r\n \r\n   Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n-  data=   fb.collection(\"sweetlines\").get();\r\n-    // data = fb\r\n-    //     .collection(\"quotes\")\r\n-    //     .doc(widget.id)\r\n-    //     .snapshots();\r\n-    // print(data);\r\n+  //data=   fb.collection(\"sweetlines\").get();\r\n+    data = fb\r\n+        .collection(\"quotes\")\r\n+        .doc(widget.id)\r\n+        .snapshots();\r\n+    print(data);\r\n     return data;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1645441068348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n   //data=   fb.collection(\"sweetlines\").get();\r\n     data = fb\r\n         .collection(\"quotes\")\r\n         .doc(widget.id)\r\n-        .snapshots();\r\n+        .get();\r\n     print(data);\r\n     return data;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1645441319304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       ),\r\n       body: FutureBuilder(\r\n           future:getData(),\r\n           \r\n-          builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot <Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n"
                },
                {
                    "date": 1645441491813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,10 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Text(\r\n-                            ds['quotes'].toString(),\r\n+                            snapshot.data?.docs[index]\r\n+                                          .data()[\"sweetlines\"],\r\n                           ),\r\n                         ],\r\n                       )),\r\n                     ),\r\n"
                },
                {
                    "date": 1645441596124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n+  Future<DocumentSnapshot<Map<String, dynamic>>> getData() {\r\n   //data=   fb.collection(\"sweetlines\").get();\r\n     data = fb\r\n         .collection(\"quotes\")\r\n         .doc(widget.id)\r\n"
                },
                {
                    "date": 1645441614217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       ),\r\n       body: FutureBuilder(\r\n           future:getData(),\r\n           \r\n-          builder: (context, AsyncSnapshot<QuerySnapshot <Map<String, dynamic>>> snapshot) {\r\n+          builder: (context, AsyncSnapshot<DocumentSnapshot <Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n"
                },
                {
                    "date": 1645441622002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,12 +30,12 @@\n           builder: (context, AsyncSnapshot<DocumentSnapshot <Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                  final DocumentSnapshot ds;\r\n-                  ds = snapshot.data!.docs[index];\r\n-                  var doc = snapshot.data!.docs[index].data();\r\n-                  print(ds['quotes']);\r\n+                  // final DocumentSnapshot ds;\r\n+                  // ds = snapshot.data!.docs[index];\r\n+                  // var doc = snapshot.data!.docs[index].data();\r\n+                  // print(ds['quotes']);\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1645441683926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,10 +53,10 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Text(\r\n-                            snapshot.data?.docs[index]\r\n-                                          .data()[\"sweetlines\"],\r\n+                            snapshot.data?.data()![\"sweetlines\"],\r\n+                                         \r\n                           ),\r\n                         ],\r\n                       )),\r\n                     ),\r\n"
                },
                {
                    "date": 1645441929977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       ),\r\n       body: FutureBuilder(\r\n           future:getData(),\r\n           \r\n-          builder: (context, AsyncSnapshot<DocumentSnapshot <Map<String, dynamic>>> snapshot) {\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot <Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   // final DocumentSnapshot ds;\r\n@@ -53,9 +53,10 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Text(\r\n-                            snapshot.data?.data()![\"sweetlines\"],\r\n+                            snapshot.data?.docs[index]\r\n+                                      .data()[\"img_url\"],\r\n                                          \r\n                           ),\r\n                         ],\r\n                       )),\r\n@@ -77,9 +78,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  Future<DocumentSnapshot<Map<String, dynamic>>> getData() {\r\n+  Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n   //data=   fb.collection(\"sweetlines\").get();\r\n     data = fb\r\n         .collection(\"quotes\")\r\n         .doc(widget.id)\r\n"
                },
                {
                    "date": 1645442143173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,12 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-          future:getData(),\r\n+       \r\n+          future:fb.collection(\"quotes\").doc(widget.id).get(),\r\n           \r\n-          builder: (context, AsyncSnapshot<QuerySnapshot <Map<String, dynamic>>> snapshot) {\r\n+          builder: (context, AsyncSnapshot<DocumentSnapshot <Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   // final DocumentSnapshot ds;\r\n@@ -78,14 +79,14 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n-  //data=   fb.collection(\"sweetlines\").get();\r\n-    data = fb\r\n-        .collection(\"quotes\")\r\n-        .doc(widget.id)\r\n-        .get();\r\n-    print(data);\r\n-    return data;\r\n-  }\r\n+  // Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n+  // //data=   fb.collection(\"sweetlines\").get();\r\n+  //   data = fb\r\n+  //       .collection(\"quotes\")\r\n+  //       .doc(widget.id)\r\n+  //       .get();\r\n+  //   print(data);\r\n+  //   return data;\r\n+  // }\r\n }\r\n"
                },
                {
                    "date": 1645442200128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n       body: FutureBuilder(\r\n        \r\n           future:fb.collection(\"quotes\").doc(widget.id).get(),\r\n           \r\n-          builder: (context, AsyncSnapshot<DocumentSnapshot <Map<String, dynamic>>> snapshot) {\r\n+          builder: (context, AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   // final DocumentSnapshot ds;\r\n"
                },
                {
                    "date": 1645442430419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,15 +25,15 @@\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n        \r\n-          future:fb.collection(\"quotes\").doc(widget.id).get(),\r\n+          future: fb.collection(\"quotes\").doc(widget.id).get() ,\r\n           \r\n           builder: (context, AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                  // final DocumentSnapshot ds;\r\n+                  final DocumentSnapshot ds;\r\n                   // ds = snapshot.data!.docs[index];\r\n                   // var doc = snapshot.data!.docs[index].data();\r\n                   // print(ds['quotes']);\r\n                   return GestureDetector(\r\n"
                },
                {
                    "date": 1645442481307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,9 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-       \r\n-          future: fb.collection(\"quotes\").doc(widget.id).get() ,\r\n-          \r\n+          future: fb.collection(\"quotes\").doc(widget.id).get(),\r\n           builder: (context, AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n@@ -54,11 +52,9 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Text(\r\n-                            snapshot.data?.docs[index]\r\n-                                      .data()[\"img_url\"],\r\n-                                         \r\n+                            snapshot.data!.data().toString()\r\n                           ),\r\n                         ],\r\n                       )),\r\n                     ),\r\n@@ -73,9 +69,9 @@\n               );\r\n             } else if (snapshot.connectionState == ConnectionState.none) {\r\n               return Text(\"No data\");\r\n             }\r\n-           \r\n+\r\n             return CircularProgressIndicator();\r\n           }),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1645442796588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,18 +23,18 @@\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n-      body: FutureBuilder(\r\n-          future: fb.collection(\"quotes\").doc(widget.id).get(),\r\n+      body: StreamBuilder(\r\n+          stream: fb.collection(\"quotes\").doc(widget.id).snapshots(),\r\n           builder: (context, AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n-                  // ds = snapshot.data!.docs[index];\r\n-                  // var doc = snapshot.data!.docs[index].data();\r\n-                  // print(ds['quotes']);\r\n+                  ds = snapshot.data!.docs[index];\r\n+                  var doc = snapshot.data!.docs[index].data();\r\n+                  print(ds['quotes']);\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1645443106248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,10 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n-          stream: fb.collection(\"quotes\").doc(widget.id).snapshots(),\r\n-          builder: (context, AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n+          stream: getdata(),\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n@@ -75,8 +75,18 @@\n           }),\r\n     );\r\n   }\r\n \r\n+  Stream<QuerySnapshot> getdata() {\r\n+\r\n+  data =  fb\r\n+        .collection(\"quotes\")\r\n+        .doc(widget.id)\r\n+        .snapshots();\r\n+    return data;\r\n+\r\n+  }\r\n+\r\n   // Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n   // //data=   fb.collection(\"sweetlines\").get();\r\n   //   data = fb\r\n   //       .collection(\"quotes\")\r\n"
                },
                {
                    "date": 1645443199547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,11 +51,9 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(\r\n-                            snapshot.data!.data().toString()\r\n-                          ),\r\n+                          Text(ds['quotes']),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n@@ -76,15 +74,10 @@\n     );\r\n   }\r\n \r\n   Stream<QuerySnapshot> getdata() {\r\n-\r\n-  data =  fb\r\n-        .collection(\"quotes\")\r\n-        .doc(widget.id)\r\n-        .snapshots();\r\n+    data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n     return data;\r\n-\r\n   }\r\n \r\n   // Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n   // //data=   fb.collection(\"sweetlines\").get();\r\n"
                },
                {
                    "date": 1645443244193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n                       )),\r\n                     ),\r\n                   );\r\n                 },\r\n-                itemCount: 2,\r\n+                itemCount: snapshot.data!.docs.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1645443771879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n           stream: getdata(),\r\n-          builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot<Map<String>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n"
                },
                {
                    "date": 1645443856173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n           stream: getdata(),\r\n-          builder: (context, AsyncSnapshot<QuerySnapshot<Map<String>> snapshot) {\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot<Map<String>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n@@ -73,9 +73,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  Stream<QuerySnapshot> getdata() {\r\n+  Future<Stream<QuerySnapshot<Map>>> getdata() async {\r\n     data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n     return data;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1645444130285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n           stream: getdata(),\r\n-          builder: (context, AsyncSnapshot<QuerySnapshot<Map<String>>> snapshot) {\r\n+          builder: (context,   AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n@@ -73,9 +73,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  Future<Stream<QuerySnapshot<Map>>> getdata() async {\r\n+   Stream <QuerySnapshot<Map<String, dynamic>>> getdata() {\r\n     data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n     return data;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1645444138715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n           stream: getdata(),\r\n-          builder: (context,   AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n"
                },
                {
                    "date": 1645444173573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-   Stream <QuerySnapshot<Map<String, dynamic>>> getdata() {\r\n+   Stream <DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n     data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n     return data;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1645444182393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n           stream: getdata(),\r\n-          builder: (context, AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n+          builder: (context, AsyncSnapshot<DocumentSnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n"
                },
                {
                    "date": 1645444412791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,10 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n-                  ds = snapshot.data!.docs[index];\r\n-                  var doc = snapshot.data!.docs[index].data();\r\n+                  ds = snapshot.data!.get('quotes');\r\n+                 // var doc = snapshot.data!.docs[index].data();\r\n                   print(ds['quotes']);\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n@@ -57,9 +57,9 @@\n                       )),\r\n                     ),\r\n                   );\r\n                 },\r\n-                itemCount: snapshot.data!.docs.length,\r\n+                itemCount: snapshot.data!.data()!.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1645444491016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,9 @@\n   }\r\n \r\n    Stream <DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n     data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n+    print(data);\r\n     return data;\r\n   }\r\n \r\n   // Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n"
                },
                {
                    "date": 1645444585954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(ds['quotes']),\r\n+                          Text(data['sweetlines']),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1645447816173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n                   ds = snapshot.data!.get('quotes');\r\n                  // var doc = snapshot.data!.docs[index].data();\r\n-                  print(ds['quotes']);\r\n+                  print(ds['sweetlines']);\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1645448125051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(data['sweetlines']),\r\n+                          Text(snapshot.data!.data()!['sweetlines'].toString()),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1645448175275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,10 @@\n   }\r\n \r\n    Stream <DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n     data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n-    print(data);\r\n+    print( data.toString(););\r\n+    data.toString();\r\n     return data;\r\n   }\r\n \r\n   // Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n"
                },
                {
                    "date": 1645448181943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n   }\r\n \r\n    Stream <DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n     data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n-    print( data.toString(););\r\n+    print( data.toString());\r\n     data.toString();\r\n     return data;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1645448366604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n     );\r\n   }\r\n \r\n    Stream <DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n-    data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n+    data = fb.collection(\"quotes\").doc(widget.id).get();\r\n     print( data.toString());\r\n     data.toString();\r\n     return data;\r\n   }\r\n"
                },
                {
                    "date": 1645448394074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n     );\r\n   }\r\n \r\n    Stream <DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n-    data = fb.collection(\"quotes\").doc(widget.id).get();\r\n+    data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n     print( data.toString());\r\n     data.toString();\r\n     return data;\r\n   }\r\n"
                },
                {
                    "date": 1645448766544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,9 @@\n                   final DocumentSnapshot ds;\r\n                   ds = snapshot.data!.get('quotes');\r\n                  // var doc = snapshot.data!.docs[index].data();\r\n                   print(ds['sweetlines']);\r\n+                 print(snapshot.data!.data()!.length);\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1645448991545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,8 +77,9 @@\n \r\n    Stream <DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n     data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n     print( data.toString());\r\n+    print(data.data!.data()!.length);\r\n     data.toString();\r\n     return data;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1645449298972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,10 +77,9 @@\n \r\n    Stream <DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n     data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n     print( data.toString());\r\n-    print(data.data!.data()!.length);\r\n-    data.toString();\r\n+   \r\n     return data;\r\n   }\r\n \r\n   // Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n"
                },
                {
                    "date": 1645449723154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,17 +25,21 @@\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: StreamBuilder(\r\n           stream: getdata(),\r\n-          builder: (context, AsyncSnapshot<DocumentSnapshot<Map<String, dynamic>>> snapshot) {\r\n-            if (snapshot.connectionState == ConnectionState.done) {\r\n+          builder: (context,\r\n+              AsyncSnapshot<DocumentSnapshot<Map<String, dynamic>>> snapshot) {\r\n+            if (!snapshot.hasData) {\r\n+              return CircularProgressIndicator();\r\n+            }\r\n+           \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n                   ds = snapshot.data!.get('quotes');\r\n-                 // var doc = snapshot.data!.docs[index].data();\r\n+                  // var doc = snapshot.data!.docs[index].data();\r\n                   print(ds['sweetlines']);\r\n-                 print(snapshot.data!.data()!.length);\r\n+                  print(snapshot.data!.data()!.length);\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -65,21 +69,17 @@\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n                 control: SwiperControl(),\r\n               );\r\n-            } else if (snapshot.connectionState == ConnectionState.none) {\r\n-              return Text(\"No data\");\r\n-            }\r\n-\r\n-            return CircularProgressIndicator();\r\n+            \r\n           }),\r\n     );\r\n   }\r\n \r\n-   Stream <DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n+  Stream<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n     data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n-    print( data.toString());\r\n-   \r\n+    print(data.toString());\r\n+\r\n     return data;\r\n   }\r\n \r\n   // Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n"
                },
                {
                    "date": 1645449732712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,48 +30,47 @@\n               AsyncSnapshot<DocumentSnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (!snapshot.hasData) {\r\n               return CircularProgressIndicator();\r\n             }\r\n-           \r\n-              return Swiper(\r\n-                itemBuilder: (BuildContext context, int index) {\r\n-                  final DocumentSnapshot ds;\r\n-                  ds = snapshot.data!.get('quotes');\r\n-                  // var doc = snapshot.data!.docs[index].data();\r\n-                  print(ds['sweetlines']);\r\n-                  print(snapshot.data!.data()!.length);\r\n-                  return GestureDetector(\r\n-                    onLongPress: () {\r\n-                      Clipboard.setData(ClipboardData(text: \"your text\"));\r\n-                      ScaffoldMessenger.of(context).showSnackBar(\r\n-                        SnackBar(\r\n-                          content: Text(\"Text copied to clipboard\"),\r\n-                        ),\r\n-                      );\r\n-                    },\r\n-                    child: Container(\r\n-                      decoration: BoxDecoration(\r\n-                          color: ThemeClass.pinkColor,\r\n-                          border: Border.all(color: Colors.red.shade400),\r\n-                          borderRadius: BorderRadius.circular(12.0)),\r\n-                      child: Center(\r\n-                          child: Column(\r\n-                        crossAxisAlignment: CrossAxisAlignment.center,\r\n-                        children: [\r\n-                          Text(snapshot.data!.data()!['sweetlines'].toString()),\r\n-                        ],\r\n-                      )),\r\n-                    ),\r\n-                  );\r\n-                },\r\n-                itemCount: snapshot.data!.data()!.length,\r\n-                itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n-                itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n-                layout: SwiperLayout.TINDER,\r\n-                pagination: SwiperPagination(),\r\n-                control: SwiperControl(),\r\n-              );\r\n-            \r\n+\r\n+            return Swiper(\r\n+              itemBuilder: (BuildContext context, int index) {\r\n+                final DocumentSnapshot ds;\r\n+                ds = snapshot.data!.get('quotes');\r\n+                // var doc = snapshot.data!.docs[index].data();\r\n+                print(ds['sweetlines']);\r\n+                print(snapshot.data!.data()!.length);\r\n+                return GestureDetector(\r\n+                  onLongPress: () {\r\n+                    Clipboard.setData(ClipboardData(text: \"your text\"));\r\n+                    ScaffoldMessenger.of(context).showSnackBar(\r\n+                      SnackBar(\r\n+                        content: Text(\"Text copied to clipboard\"),\r\n+                      ),\r\n+                    );\r\n+                  },\r\n+                  child: Container(\r\n+                    decoration: BoxDecoration(\r\n+                        color: ThemeClass.pinkColor,\r\n+                        border: Border.all(color: Colors.red.shade400),\r\n+                        borderRadius: BorderRadius.circular(12.0)),\r\n+                    child: Center(\r\n+                        child: Column(\r\n+                      crossAxisAlignment: CrossAxisAlignment.center,\r\n+                      children: [\r\n+                        Text(snapshot.data!.data()!['sweetlines'].toString()),\r\n+                      ],\r\n+                    )),\r\n+                  ),\r\n+                );\r\n+              },\r\n+              itemCount: snapshot.data!.data()!.length,\r\n+              itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n+              itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n+              layout: SwiperLayout.TINDER,\r\n+              pagination: SwiperPagination(),\r\n+              control: SwiperControl(),\r\n+            );\r\n           }),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1645450150913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n     );\r\n   }\r\n \r\n   Stream<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n-    data = fb.collection(\"quotes\").doc(widget.id).snapshots();\r\n+    data = fb.collection(\"quotes\").doc(widget.id).get();\r\n     print(data.toString());\r\n \r\n     return data;\r\n   }\r\n"
                },
                {
                    "date": 1645450332534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n-      body: StreamBuilder(\r\n-          stream: getdata(),\r\n+      body: FutureBuilder(\r\n+          future: getdata(),\r\n           builder: (context,\r\n               AsyncSnapshot<DocumentSnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (!snapshot.hasData) {\r\n               return CircularProgressIndicator();\r\n@@ -73,9 +73,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  Stream<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n+  Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n     data = fb.collection(\"quotes\").doc(widget.id).get();\r\n     print(data.toString());\r\n \r\n     return data;\r\n"
                },
                {
                    "date": 1645461634441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-          future: getdata(),\r\n+          future:fb.collection(\"quotes\").doc(widget.id).get(),\r\n           builder: (context,\r\n               AsyncSnapshot<DocumentSnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (!snapshot.hasData) {\r\n               return CircularProgressIndicator();\r\n"
                },
                {
                    "date": 1645462150164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,53 +24,55 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-          future:fb.collection(\"quotes\").doc(widget.id).get(),\r\n+          future: fb.collection(\"quotes\").doc(widget.id).get(),\r\n           builder: (context,\r\n               AsyncSnapshot<DocumentSnapshot<Map<String, dynamic>>> snapshot) {\r\n-            if (!snapshot.hasData) {\r\n-              return CircularProgressIndicator();\r\n+            if (snapshot.connectionState == ConnectionState.done) {\r\n+              return Swiper(\r\n+                itemBuilder: (BuildContext context, int index) {\r\n+                  final DocumentSnapshot ds;\r\n+                  ds = snapshot.data!.get('quotes');\r\n+                  // var doc = snapshot.data!.docs[index].data();\r\n+                  print(ds['sweetlines']);\r\n+                  print(snapshot.data!.data()!.length);\r\n+                  return GestureDetector(\r\n+                    onLongPress: () {\r\n+                      Clipboard.setData(ClipboardData(text: \"your text\"));\r\n+                      ScaffoldMessenger.of(context).showSnackBar(\r\n+                        SnackBar(\r\n+                          content: Text(\"Text copied to clipboard\"),\r\n+                        ),\r\n+                      );\r\n+                    },\r\n+                    child: Container(\r\n+                      decoration: BoxDecoration(\r\n+                          color: ThemeClass.pinkColor,\r\n+                          border: Border.all(color: Colors.red.shade400),\r\n+                          borderRadius: BorderRadius.circular(12.0)),\r\n+                      child: Center(\r\n+                          child: Column(\r\n+                        crossAxisAlignment: CrossAxisAlignment.center,\r\n+                        children: [\r\n+                          Text(snapshot.data!.data()!['sweetlines'].toString()),\r\n+                        ],\r\n+                      )),\r\n+                    ),\r\n+                  );\r\n+                },\r\n+                itemCount: snapshot.data!.data()!.length,\r\n+                itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n+                itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n+                layout: SwiperLayout.TINDER,\r\n+                pagination: SwiperPagination(),\r\n+                control: SwiperControl(),\r\n+              );\r\n+            } else if (snapshot.connectionState == ConnectionState.none) {\r\n+              return Text(\"No data\");\r\n             }\r\n \r\n-            return Swiper(\r\n-              itemBuilder: (BuildContext context, int index) {\r\n-                final DocumentSnapshot ds;\r\n-                ds = snapshot.data!.get('quotes');\r\n-                // var doc = snapshot.data!.docs[index].data();\r\n-                print(ds['sweetlines']);\r\n-                print(snapshot.data!.data()!.length);\r\n-                return GestureDetector(\r\n-                  onLongPress: () {\r\n-                    Clipboard.setData(ClipboardData(text: \"your text\"));\r\n-                    ScaffoldMessenger.of(context).showSnackBar(\r\n-                      SnackBar(\r\n-                        content: Text(\"Text copied to clipboard\"),\r\n-                      ),\r\n-                    );\r\n-                  },\r\n-                  child: Container(\r\n-                    decoration: BoxDecoration(\r\n-                        color: ThemeClass.pinkColor,\r\n-                        border: Border.all(color: Colors.red.shade400),\r\n-                        borderRadius: BorderRadius.circular(12.0)),\r\n-                    child: Center(\r\n-                        child: Column(\r\n-                      crossAxisAlignment: CrossAxisAlignment.center,\r\n-                      children: [\r\n-                        Text(snapshot.data!.data()!['sweetlines'].toString()),\r\n-                      ],\r\n-                    )),\r\n-                  ),\r\n-                );\r\n-              },\r\n-              itemCount: snapshot.data!.data()!.length,\r\n-              itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n-              itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n-              layout: SwiperLayout.TINDER,\r\n-              pagination: SwiperPagination(),\r\n-              control: SwiperControl(),\r\n-            );\r\n+            return CircularProgressIndicator();\r\n           }),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1645462469811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n                       )),\r\n                     ),\r\n                   );\r\n                 },\r\n-                itemCount: snapshot.data!.data()!.length,\r\n+                itemCount: 2,\r\n                 itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1645462957673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,18 +17,19 @@\n   var data;\r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n+     CollectionReference quotes = FirebaseFirestore.instance.collection('quotes');\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-          future: fb.collection(\"quotes\").doc(widget.id).get(),\r\n+          future: fb.collection('quotes').doc(widget.id).,\r\n           builder: (context,\r\n-              AsyncSnapshot<DocumentSnapshot<Map<String, dynamic>>> snapshot) {\r\n+              AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n"
                },
                {
                    "date": 1645463029142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,11 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-          future: fb.collection('quotes').doc(widget.id).,\r\n+          future: quotes.doc(widget.id).get(),\r\n           builder: (context,\r\n-              AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n+              AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n"
                },
                {
                    "date": 1645463038609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,9 @@\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n                   ds = snapshot.data!.get('quotes');\r\n                   // var doc = snapshot.data!.docs[index].data();\r\n-                  print(ds['sweetlines']);\r\n-                  print(snapshot.data!.data()!.length);\r\n+               \r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1645463080830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,26 +17,33 @@\n   var data;\r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-     CollectionReference quotes = FirebaseFirestore.instance.collection('quotes');\r\n+    CollectionReference quotes =\r\n+        FirebaseFirestore.instance.collection('quotes');\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n           future: quotes.doc(widget.id).get(),\r\n-          builder: (context,\r\n-              AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n+          builder: (context, AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n+            if (snapshot.hasError) {\r\n+              return Text(\"Something went wrong\");\r\n+            }\r\n+                if (snapshot.hasData && !snapshot.data!.exists) {\r\n+          return Text(\"Document does not exist\");\r\n+        }\r\n+\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n                   ds = snapshot.data!.get('quotes');\r\n                   // var doc = snapshot.data!.docs[index].data();\r\n-               \r\n+\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1645463161797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,17 +31,18 @@\n           builder: (context, AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n             if (snapshot.hasError) {\r\n               return Text(\"Something went wrong\");\r\n             }\r\n-                if (snapshot.hasData && !snapshot.data!.exists) {\r\n-          return Text(\"Document does not exist\");\r\n-        }\r\n+            if (snapshot.hasData && !snapshot.data!.exists) {\r\n+              return Text(\"Document does not exist\");\r\n+            }\r\n \r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n                   ds = snapshot.data!.get('quotes');\r\n+                     Map<String, dynamic> data1 = snapshot.data!.data() as Map<String, dynamic>;\r\n                   // var doc = snapshot.data!.docs[index].data();\r\n \r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n@@ -60,9 +61,9 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(snapshot.data!.data()!['sweetlines'].toString()),\r\n+                          Text(data1['sweetlines']),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1645463440427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-          future: quotes.doc(widget.id).get(),\r\n+          future: quotes.doc(widget.id).snapshots().first,\r\n           builder: (context, AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n             if (snapshot.hasError) {\r\n               return Text(\"Something went wrong\");\r\n             }\r\n@@ -41,10 +41,9 @@\n                 itemBuilder: (BuildContext context, int index) {\r\n                   final DocumentSnapshot ds;\r\n                   ds = snapshot.data!.get('quotes');\r\n                      Map<String, dynamic> data1 = snapshot.data!.data() as Map<String, dynamic>;\r\n-                  // var doc = snapshot.data!.docs[index].data();\r\n-\r\n+                \r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1645633064110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,17 +18,17 @@\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     CollectionReference quotes =\r\n-        FirebaseFirestore.instance.collection('quotes');\r\n+        FirebaseFirestore.instance.collection(\"HindiQuotes\");\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-          future: quotes.doc(widget.id).snapshots().first,\r\n+          future: fb.collection(\"HindiQuotes\").get(),\r\n           builder: (context, AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n             if (snapshot.hasError) {\r\n               return Text(\"Something went wrong\");\r\n             }\r\n"
                },
                {
                    "date": 1645633256799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,33 +17,21 @@\n   var data;\r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    CollectionReference quotes =\r\n-        FirebaseFirestore.instance.collection(\"HindiQuotes\");\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n           future: fb.collection(\"HindiQuotes\").get(),\r\n-          builder: (context, AsyncSnapshot<DocumentSnapshot> snapshot) {\r\n-            if (snapshot.hasError) {\r\n-              return Text(\"Something went wrong\");\r\n-            }\r\n-            if (snapshot.hasData && !snapshot.data!.exists) {\r\n-              return Text(\"Document does not exist\");\r\n-            }\r\n-\r\n+          builder: (context,\r\n+              AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                  final DocumentSnapshot ds;\r\n-                  ds = snapshot.data!.get('quotes');\r\n-                     Map<String, dynamic> data1 = snapshot.data!.data() as Map<String, dynamic>;\r\n-                \r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -60,9 +48,9 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(data1['sweetlines']),\r\n+                          Text(snapshot.data?.docs[index].data()[\"name\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n@@ -99,4 +87,14 @@\n   //   print(data);\r\n   //   return data;\r\n   // }\r\n }\r\n+ // if (snapshot.hasError) {\r\n+            //   return Text(\"Something went wrong\");\r\n+            // }\r\n+            // if (snapshot.hasData && !snapshot.data!.exists) {\r\n+            //   return Text(\"Document does not exist\");\r\n+            // }\r\n+\r\n+  // final DocumentSnapshot ds;\r\n+                  // ds = snapshot.data!.get('quotes');\r\n+                  //    Map<String, dynamic> data1 = snapshot.data!.data() as Map<String, dynamic>;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645634095141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                       )),\r\n                     ),\r\n                   );\r\n                 },\r\n-                itemCount: 2,\r\n+                itemCount: snapshot.data!.docs.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1645634553202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n \r\n import '../themeclass.dart';\r\n \r\n class ThoughtsScreen extends StatefulWidget {\r\n-  ThoughtsScreen({Key? key, required this.id}) : super(key: key);\r\n-  final String? id;\r\n+  ThoughtsScreen({Key? key, required this.name}) : super(key: key);\r\n+  final String? name;\r\n \r\n   @override\r\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n"
                },
                {
                    "date": 1645634600260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,14 +70,14 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n-    data = fb.collection(\"quotes\").doc(widget.id).get();\r\n-    print(data.toString());\r\n+  // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n+  //   data = fb.collection(\"quotes\").doc(widget.id).get();\r\n+  //   print(data.toString());\r\n \r\n-    return data;\r\n-  }\r\n+  //   return data;\r\n+  // }\r\n \r\n   // Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n   // //data=   fb.collection(\"sweetlines\").get();\r\n   //   data = fb\r\n"
                },
                {
                    "date": 1645634642726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-          future: fb.collection(\"HindiQuotes\").get(),\r\n+          future: fb.collection(\"{$widget.name}\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n"
                },
                {
                    "date": 1645634664025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-          future: fb.collection(\"{$widget.name}\").get(),\r\n+          future: fb.collection(\"${widget.name}\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n"
                },
                {
                    "date": 1645635704572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,18 +7,21 @@\n \r\n class ThoughtsScreen extends StatefulWidget {\r\n   ThoughtsScreen({Key? key, required this.name}) : super(key: key);\r\n   final String? name;\r\n+  \r\n \r\n   @override\r\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n-  var data;\r\n+ \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n+     var data = widget.name;\r\n+     print(\"categeory $data\");\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n"
                },
                {
                    "date": 1645635945554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,18 +18,18 @@\n  \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-     var data = widget.name;\r\n+     String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n       ),\r\n       body: FutureBuilder(\r\n-          future: fb.collection(\"${widget.name}\").get(),\r\n+          future: fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n"
                },
                {
                    "date": 1645636005402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(snapshot.data?.docs[index].data()[\"name\"]),\r\n+                          Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1645636659546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import 'dart:html';\r\n+\r\n import 'package:card_swiper/card_swiper.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n@@ -14,8 +16,9 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n+  List<String> names = List.from(document['array_list']);\r\n  \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n"
                },
                {
                    "date": 1645677307812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n-  List<String> names = List.from(document['array_list']);\r\n+ // List<String> names = List.from(document['array_list']);\r\n  \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n"
                },
                {
                    "date": 1645944784647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n-import 'dart:html';\r\n \r\n+\r\n import 'package:card_swiper/card_swiper.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n"
                },
                {
                    "date": 1645945149677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n+      backgroundColor: ThemeClass.cyanColor,\r\n       appBar: AppBar(\r\n         backgroundColor: ThemeClass.redColor,\r\n         title: Text(\"Tahuka App \"),\r\n         actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645945174206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,13 @@\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: ThemeClass.cyanColor,\r\n-      appBar: AppBar(\r\n-        backgroundColor: ThemeClass.redColor,\r\n-        title: Text(\"Tahuka App \"),\r\n-        actions: [const Icon(Icons.more_vert)],\r\n-      ),\r\n+      // appBar: AppBar(\r\n+      //   backgroundColor: ThemeClass.redColor,\r\n+      //   title: Text(\"Tahuka App \"),\r\n+      //   actions: [const Icon(Icons.more_vert)],\r\n+      // ),\r\n       body: FutureBuilder(\r\n           future: fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n"
                },
                {
                    "date": 1645945561632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: ThemeClass.cyanColor,\r\n+      backgroundColor: Colors.indigo.shade800\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645945573329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Colors.indigo.shade800\r\n+      backgroundColor: Colors.indigo.shade800,\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645945612093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Colors.indigo.shade800,\r\n+      backgroundColor: Colors.indigo.shade700,\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645945686193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Colors.indigo.shade700,\r\n+      backgroundColor: Colors.indigo.shade600,\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645945702135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Colors.indigo.shade600,\r\n+      backgroundColor: Colors.indigo,\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645945835088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Colors.indigo,\r\n+      backgroundColor: Color.fromRGBO(0, 0, 128, 0.1),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645945997550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Color.fromRGBO(0, 0, 128, 0.1),\r\n+      backgroundColor: Color.fromRGBO(0, 0, 128, 1),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645946035557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Color.fromRGBO(0, 0, 128, 1),\r\n+      backgroundColor: Color.fromRGBO(0, 0, 128, 0.6),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645946055362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Color.fromRGBO(0, 0, 128, 0.6),\r\n+      backgroundColor: Color.fromRGBO(0, 0, 128, 0.3),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645946154365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Color.fromRGBO(0, 0, 128, 0.3),\r\n+      backgroundColor: Color(0x1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645946204086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Color(0x1e3d59),\r\n+      backgroundColor: Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645946332266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n                       );\r\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n-                          color: ThemeClass.pinkColor,\r\n+                          color: Color(0xFFf5f0e1),\r\n                           border: Border.all(color: Colors.red.shade400),\r\n                           borderRadius: BorderRadius.circular(12.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n"
                },
                {
                    "date": 1645946423047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n                 itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n-                control: SwiperControl(),\r\n+               // control: SwiperControl(),\r\n               );\r\n             } else if (snapshot.connectionState == ConnectionState.none) {\r\n               return Text(\"No data\");\r\n             }\r\n"
                },
                {
                    "date": 1645946466127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n                   );\r\n                 },\r\n                 itemCount: snapshot.data!.docs.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n-                itemHeight: MediaQuery.of(context).size.height * 0.6,\r\n+                itemHeight: MediaQuery.of(context).size.height * 0.3,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n                // control: SwiperControl(),\r\n               );\r\n"
                },
                {
                    "date": 1645946486239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,10 +62,10 @@\n                     ),\r\n                   );\r\n                 },\r\n                 itemCount: snapshot.data!.docs.length,\r\n-                itemWidth: MediaQuery.of(context).size.width * 0.7,\r\n-                itemHeight: MediaQuery.of(context).size.height * 0.3,\r\n+                itemWidth: MediaQuery.of(context).size.width * 0.9,\r\n+                itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n                // control: SwiperControl(),\r\n               );\r\n"
                },
                {
                    "date": 1645946510488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                 itemCount: snapshot.data!.docs.length,\r\n-                itemWidth: MediaQuery.of(context).size.width * 0.9,\r\n+                itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n                // control: SwiperControl(),\r\n"
                },
                {
                    "date": 1645946545302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n                           border: Border.all(color: Colors.red.shade400),\r\n-                          borderRadius: BorderRadius.circular(12.0)),\r\n+                          borderRadius: BorderRadius.circular(15.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n"
                },
                {
                    "date": 1645946572578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n                           border: Border.all(color: Colors.red.shade400),\r\n-                          borderRadius: BorderRadius.circular(15.0)),\r\n+                          borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n"
                },
                {
                    "date": 1645946603003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.red.shade400),\r\n+                          border: Border.all(color: Colors.red),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1645946620293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.red),\r\n+                          border: Border.all(color: Colors.black),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1645946703488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.black),\r\n+                          border: Border.all(color: Colors.orange,width: 2),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1645946749687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.orange,width: 2),\r\n+                          border: Border.all(color: Colors.orange,width: 5),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1645946763146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.orange,width: 5),\r\n+                          border: Border.all(color: Colors.orange,width: 4),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1645946775147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.orange,width: 4),\r\n+                          border: Border.all(color: Colors.red,width: 4),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1645947358879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Color(0xFF1e3d59),\r\n+      backgroundColor:Colors.purple.shade700,\r\n+      \r\n+      // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n"
                },
                {
                    "date": 1645947376858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.purple.shade700,\r\n+      backgroundColor:Colors.purple.shade400,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947387762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.purple.shade400,\r\n+      backgroundColor:Colors.purple.shade300,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947402291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.purple.shade300,\r\n+      backgroundColor:Colors.purple.shade800,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947413212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.purple.shade800,\r\n+      backgroundColor:Colors.purple.shade900,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947438551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.purple.shade900,\r\n+      backgroundColor:Colors.purpleAccent,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947449809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.purpleAccent,\r\n+      backgroundColor:Colors.purpleAccent.shade100,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947463274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.purpleAccent.shade100,\r\n+      backgroundColor:Colors.purpleAccent.shade700,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947508656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.purpleAccent.shade700,\r\n+      backgroundColor:Colors.deepPurple,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947525243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.deepPurple,\r\n+      backgroundColor:Colors.deepPurple.shade400,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947546007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.deepPurple.shade400,\r\n+      backgroundColor:Colors.deepPurple.shade900,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947555004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.deepPurple.shade900,\r\n+      backgroundColor:Colors.deepPurple.shade800,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947564231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.deepPurple.shade800,\r\n+      backgroundColor:Colors.deepPurple.shade700,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947590031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.deepPurple.shade700,\r\n+      backgroundColor:Colors.deepPurple.shade400,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947639792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.deepPurple.shade400,\r\n+      backgroundColor:Colors.brown.shade400,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947676415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.brown.shade400,\r\n+      backgroundColor:Colors.deepOrange.shade400,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947691746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.deepOrange.shade400,\r\n+      backgroundColor:Colors.deepOrange.shade300,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947710425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   Widget build(BuildContext context) {\r\n      String data = widget.name.toString();\r\n      print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.deepOrange.shade300,\r\n+      backgroundColor:Colors.deepOrange.shade200,\r\n       \r\n       // Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n"
                },
                {
                    "date": 1645947773277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,10 @@\n                       );\r\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n-                          color: Color(0xFFf5f0e1),\r\n+                          color:Colors.red.shade100,\r\n+                          // Color(0xFFf5f0e1),\r\n                           border: Border.all(color: Colors.red,width: 4),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n"
                },
                {
                    "date": 1645947798401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n                       );\r\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n-                          color:Colors.red.shade100,\r\n+                          color:Colors.red.shade200,\r\n                           // Color(0xFFf5f0e1),\r\n                           border: Border.all(color: Colors.red,width: 4),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n"
                },
                {
                    "date": 1645947837385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n                       );\r\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n-                          color:Colors.red.shade200,\r\n+                          color:Colors.lightGreen.shade300,\r\n                           // Color(0xFFf5f0e1),\r\n                           border: Border.all(color: Colors.red,width: 4),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n"
                },
                {
                    "date": 1645948259420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-\r\n-\r\n import 'package:card_swiper/card_swiper.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n@@ -9,26 +7,23 @@\n \r\n class ThoughtsScreen extends StatefulWidget {\r\n   ThoughtsScreen({Key? key, required this.name}) : super(key: key);\r\n   final String? name;\r\n-  \r\n \r\n   @override\r\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n- // List<String> names = List.from(document['array_list']);\r\n- \r\n+  // List<String> names = List.from(document['array_list']);\r\n+\r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-     String data = widget.name.toString();\r\n-     print(\"categeory $data\");\r\n+    String data = widget.name.toString();\r\n+    print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor:Colors.deepOrange.shade200,\r\n-      \r\n-      // Color(0xFF1e3d59),\r\n+      backgroundColor: Color(0xFF1e3d59),\r\n       // appBar: AppBar(\r\n       //   backgroundColor: ThemeClass.redColor,\r\n       //   title: Text(\"Tahuka App \"),\r\n       //   actions: [const Icon(Icons.more_vert)],\r\n@@ -50,11 +45,10 @@\n                       );\r\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n-                          color:Colors.lightGreen.shade300,\r\n-                          // Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.red,width: 4),\r\n+                          color: Color(0xFFf5f0e1),\r\n+                          border: Border.all(color: Colors.red, width: 4),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n@@ -69,9 +63,9 @@\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n-               // control: SwiperControl(),\r\n+                // control: SwiperControl(),\r\n               );\r\n             } else if (snapshot.connectionState == ConnectionState.none) {\r\n               return Text(\"No data\");\r\n             }\r\n"
                },
                {
                    "date": 1645948432498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.red, width: 4),\r\n+                          border: Border.all(color: Colors.orangeAccent, width: 3),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1645948445192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.orangeAccent, width: 3),\r\n+                          border: Border.all(color: Colors.orange, width: 3),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1645948482401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.orange, width: 3),\r\n+                          border: Border.all(color: Colors.amber.shade900, width: 3),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1645948546733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,10 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n+                          Text(\"data 123 its me rishita hello every one nice to meet you\")\r\n+                          // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1645948603596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(\"data 123 its me rishita hello every one nice to meet you\")\r\n+                          Text(\"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\")\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n"
                },
                {
                    "date": 1645948651301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,12 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Text(\"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\")\r\n+                          Padding(\r\n+                            padding: const EdgeInsets.all(3.0),\r\n+                            child: Text(\"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\"),\r\n+                          )\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n"
                },
                {
                    "date": 1645948682487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Padding(\r\n-                            padding: const EdgeInsets.all(3.0),\r\n+                            padding: const EdgeInsets.only(top: 8.0,left: 5.0),\r\n                             child: Text(\"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\"),\r\n                           )\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n"
                },
                {
                    "date": 1645948697841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Padding(\r\n-                            padding: const EdgeInsets.only(top: 8.0,left: 5.0),\r\n+                            padding: const EdgeInsets.only(top: 8.0,left: 5.0,right: 5.0),\r\n                             child: Text(\"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\"),\r\n                           )\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n"
                },
                {
                    "date": 1645948713561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Padding(\r\n-                            padding: const EdgeInsets.only(top: 8.0,left: 5.0,right: 5.0),\r\n+                            padding: const EdgeInsets.only(top: 8.0,left: 5.0,right: 5.0,bottom: 8.0),\r\n                             child: Text(\"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\"),\r\n                           )\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n"
                },
                {
                    "date": 1645948887212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import 'dart:ui';\r\n+\r\n import 'package:card_swiper/card_swiper.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n@@ -46,17 +48,22 @@\n                     },\r\n                     child: Container(\r\n                       decoration: BoxDecoration(\r\n                           color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(color: Colors.amber.shade900, width: 3),\r\n+                          border: Border.all(\r\n+                              color: Colors.amber.shade900, width: 3),\r\n                           borderRadius: BorderRadius.circular(25.0)),\r\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Padding(\r\n-                            padding: const EdgeInsets.only(top: 8.0,left: 5.0,right: 5.0,bottom: 8.0),\r\n-                            child: Text(\"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\"),\r\n+                            padding: EdgeInsets.only(\r\n+                                top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n+                            child: Text(\r\n+                              \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n+                              style: TextStyle(color:  Color(0xFF1e3d59), fontSize: 18.0   ),\r\n+                            ),\r\n                           )\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n"
                },
                {
                    "date": 1645948946749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                             child: Text(\r\n                               \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n-                              style: TextStyle(color:  Color(0xFF1e3d59), fontSize: 18.0   ),\r\n+                              style: TextStyle(color:  Color(0xFF1e3d59), fontSize: 20.0   ),\r\n                             ),\r\n                           )\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n"
                },
                {
                    "date": 1645949044810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                             child: Text(\r\n                               \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n-                              style: TextStyle(color:  Color(0xFF1e3d59), fontSize: 20.0   ),\r\n+                              style: TextStyle(color:  Colors.brown.shade900, fontSize: 20.0   ),\r\n                             ),\r\n                           )\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n"
                },
                {
                    "date": 1645969310953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,29 +45,35 @@\n                           content: Text(\"Text copied to clipboard\"),\r\n                         ),\r\n                       );\r\n                     },\r\n-                    child: Container(\r\n-                      decoration: BoxDecoration(\r\n-                          color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(\r\n-                              color: Colors.amber.shade900, width: 3),\r\n-                          borderRadius: BorderRadius.circular(25.0)),\r\n-                      child: Center(\r\n-                          child: Column(\r\n-                        crossAxisAlignment: CrossAxisAlignment.center,\r\n-                        children: [\r\n-                          Padding(\r\n-                            padding: EdgeInsets.only(\r\n-                                top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child: Text(\r\n-                              \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n-                              style: TextStyle(color:  Colors.brown.shade900, fontSize: 20.0   ),\r\n-                            ),\r\n-                          )\r\n-                          // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n-                        ],\r\n-                      )),\r\n+                    child: Column(\r\n+                      children: [\r\n+\r\n+                        Row(children: [Text(\"data\",), IconButton(onPressed: (){}, icon: Icon(Icons.access_alarm))],),\r\n+                        Container(\r\n+                          decoration: BoxDecoration(\r\n+                              color: Color(0xFFf5f0e1),\r\n+                              border: Border.all(\r\n+                                  color: Colors.amber.shade900, width: 3),\r\n+                              borderRadius: BorderRadius.circular(25.0)),\r\n+                          child: Center(\r\n+                              child: Column(\r\n+                            crossAxisAlignment: CrossAxisAlignment.center,\r\n+                            children: [\r\n+                              Padding(\r\n+                                padding: EdgeInsets.only(\r\n+                                    top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n+                                child: Text(\r\n+                                  \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n+                                  style: TextStyle(color:  Colors.brown.shade900, fontSize: 20.0   ),\r\n+                                ),\r\n+                              )\r\n+                              // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n+                            ],\r\n+                          )),\r\n+                        ),\r\n+                      ],\r\n                     ),\r\n                   );\r\n                 },\r\n                 itemCount: snapshot.data!.docs.length,\r\n"
                },
                {
                    "date": 1645969346697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,11 @@\n                     },\r\n                     child: Column(\r\n                       children: [\r\n \r\n-                        Row(children: [Text(\"data\",), IconButton(onPressed: (){}, icon: Icon(Icons.access_alarm))],),\r\n+                        Row(\r\n+                          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                          children: [Text(\"data\",), IconButton(onPressed: (){}, icon: Icon(Icons.access_alarm))],),\r\n                         Container(\r\n                           decoration: BoxDecoration(\r\n                               color: Color(0xFFf5f0e1),\r\n                               border: Border.all(\r\n"
                },
                {
                    "date": 1645969632204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,37 +45,29 @@\n                           content: Text(\"Text copied to clipboard\"),\r\n                         ),\r\n                       );\r\n                     },\r\n-                    child: Column(\r\n-                      children: [\r\n-\r\n-                        Row(\r\n-                          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                          children: [Text(\"data\",), IconButton(onPressed: (){}, icon: Icon(Icons.access_alarm))],),\r\n-                        Container(\r\n-                          decoration: BoxDecoration(\r\n-                              color: Color(0xFFf5f0e1),\r\n-                              border: Border.all(\r\n-                                  color: Colors.amber.shade900, width: 3),\r\n-                              borderRadius: BorderRadius.circular(25.0)),\r\n-                          child: Center(\r\n-                              child: Column(\r\n-                            crossAxisAlignment: CrossAxisAlignment.center,\r\n-                            children: [\r\n-                              Padding(\r\n-                                padding: EdgeInsets.only(\r\n-                                    top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                                child: Text(\r\n-                                  \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n-                                  style: TextStyle(color:  Colors.brown.shade900, fontSize: 20.0   ),\r\n-                                ),\r\n-                              )\r\n-                              // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n-                            ],\r\n-                          )),\r\n-                        ),\r\n-                      ],\r\n+                    child: Container(\r\n+                      decoration: BoxDecoration(\r\n+                          color: Color(0xFFf5f0e1),\r\n+                          border: Border.all(\r\n+                              color: Colors.amber.shade900, width: 3),\r\n+                          borderRadius: BorderRadius.circular(25.0)),\r\n+                      child: Center(\r\n+                          child: Column(\r\n+                        crossAxisAlignment: CrossAxisAlignment.center,\r\n+                        children: [\r\n+                          Padding(\r\n+                            padding: EdgeInsets.only(\r\n+                                top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n+                            child: Text(\r\n+                              \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n+                              style: TextStyle(color:  Colors.brown.shade900, fontSize: 20.0   ),\r\n+                            ),\r\n+                          )\r\n+                          // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n+                        ],\r\n+                      )),\r\n                     ),\r\n                   );\r\n                 },\r\n                 itemCount: snapshot.data!.docs.length,\r\n"
                },
                {
                    "date": 1645969657922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,13 @@\n     String data = widget.name.toString();\r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n-      // appBar: AppBar(\r\n-      //   backgroundColor: ThemeClass.redColor,\r\n-      //   title: Text(\"Tahuka App \"),\r\n-      //   actions: [const Icon(Icons.more_vert)],\r\n-      // ),\r\n+      appBar: AppBar(\r\n+        backgroundColor: ThemeClass.redColor,\r\n+        title: Text(\"Tahuka App \"),\r\n+        actions: [const Icon(Icons.more_vert)],\r\n+      ),\r\n       body: FutureBuilder(\r\n           future: fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n"
                },
                {
                    "date": 1645969737105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,9 @@\n     String data = widget.name.toString();\r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n-      appBar: AppBar(\r\n-        backgroundColor: ThemeClass.redColor,\r\n-        title: Text(\"Tahuka App \"),\r\n-        actions: [const Icon(Icons.more_vert)],\r\n-      ),\r\n+    \r\n       body: FutureBuilder(\r\n           future: fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n"
                },
                {
                    "date": 1645969813950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n             } else if (snapshot.connectionState == ConnectionState.none) {\r\n               return Text(\"No data\");\r\n             }\r\n \r\n-            return CircularProgressIndicator();\r\n+            return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1645971586504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,11 @@\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n     \r\n       body: FutureBuilder(\r\n-          future: fb.collection(\"$data\").get(),\r\n+          future:getData(),\r\n+          \r\n+          \r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n@@ -51,14 +53,14 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Padding(\r\n+                          Padding( \r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                             child: Text(\r\n                               \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n-                              style: TextStyle(color:  Colors.brown.shade900, fontSize: 20.0   ),\r\n+                              style: TextStyle(color:  Colors.brown.shade900, fontSize: 20.0),\r\n                             ),\r\n                           )\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n@@ -81,8 +83,15 @@\n           }),\r\n     );\r\n   }\r\n \r\n+  getData() {\r\n+fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n+  print(element[\"item_text_\"]);\r\n+}));\r\n+    // fb.collection(\"$data\").get(),\r\n+  }\r\n+\r\n   // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n   //   data = fb.collection(\"quotes\").doc(widget.id).get();\r\n   //   print(data.toString());\r\n \r\n"
                },
                {
                    "date": 1645971602676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     );\r\n   }\r\n \r\n   getData() {\r\n-fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n+   return fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n   print(element[\"item_text_\"]);\r\n }));\r\n     // fb.collection(\"$data\").get(),\r\n   }\r\n"
                },
                {
                    "date": 1645971771781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  getData() {\r\n+ Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n    return fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n   print(element[\"item_text_\"]);\r\n }));\r\n     // fb.collection(\"$data\").get(),\r\n"
                },
                {
                    "date": 1645971820888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,10 +84,11 @@\n     );\r\n   }\r\n \r\n  Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n-   return fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n+    var data = fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n   print(element[\"item_text_\"]);\r\n+  return data ;\r\n }));\r\n     // fb.collection(\"$data\").get(),\r\n   }\r\n \r\n"
                },
                {
                    "date": 1645972025168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,12 +83,12 @@\n           }),\r\n     );\r\n   }\r\n \r\n- Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n-    var data = fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n+ Future<QuerySnapshot<Map<String, dynamic>>> getData() async{\r\n+    var data3 = fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n   print(element[\"item_text_\"]);\r\n-  return data ;\r\n+\r\n }));\r\n     // fb.collection(\"$data\").get(),\r\n   }\r\n \r\n"
                },
                {
                    "date": 1645972059685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,10 +83,10 @@\n           }),\r\n     );\r\n   }\r\n \r\n- Future<QuerySnapshot<Map<String, dynamic>>> getData() async{\r\n-    var data3 = fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n+ getData() async{\r\n+    var data3 =  await fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n   print(element[\"item_text_\"]);\r\n \r\n }));\r\n     // fb.collection(\"$data\").get(),\r\n"
                },
                {
                    "date": 1645972498850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n           future:getData(),\r\n           \r\n           \r\n           builder: (context,\r\n-              AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n+              AsyncSnapshot<QuerySnapshot<dynamic>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   return GestureDetector(\r\n"
                },
                {
                    "date": 1645972751612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n           future:getData(),\r\n           \r\n           \r\n           builder: (context,\r\n-              AsyncSnapshot<QuerySnapshot<dynamic>> snapshot) {\r\n+              AsyncSnapshot<QuerySnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   return GestureDetector(\r\n"
                },
                {
                    "date": 1645972815209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n           future:getData(),\r\n           \r\n           \r\n           builder: (context,\r\n-              AsyncSnapshot<QuerySnapshot> snapshot) {\r\n+              AsyncSnapshot<QuerySnapshot<dynamic>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   return GestureDetector(\r\n"
                },
                {
                    "date": 1645972856528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,13 +26,12 @@\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n     \r\n       body: FutureBuilder(\r\n-          future:getData(),\r\n-          \r\n-          \r\n+          future:\r\n+           fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n-              AsyncSnapshot<QuerySnapshot<dynamic>> snapshot) {\r\n+              AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   return GestureDetector(\r\n@@ -83,16 +82,8 @@\n           }),\r\n     );\r\n   }\r\n \r\n- getData() async{\r\n-    var data3 =  await fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n-  print(element[\"item_text_\"]);\r\n-\r\n-}));\r\n-    // fb.collection(\"$data\").get(),\r\n-  }\r\n-\r\n   // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n   //   data = fb.collection(\"quotes\").doc(widget.id).get();\r\n   //   print(data.toString());\r\n \r\n"
                },
                {
                    "date": 1645973051443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,27 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n+\r\n+  @override\r\n+  void initState() {\r\n+    // TODO: implement initState\r\n+    super.initState();\r\n+\r\n+\r\n+    \r\n+CollectionReference applicationsRef = fb.collection(\"EnglishQuotes\");\r\n+DocumentReference applicationIdRef = applicationsRef.document(applicationId);\r\n+applicationIdRef.get().addOnCompleteListener(task -> {\r\n+    if (task.isSuccessful()) {\r\n+        DocumentSnapshot document = task.getResult();\r\n+        if (document.exists()) {\r\n+            List<Map<String, Object>> users = (List<Map<String, Object>>) document.get(\"users\");\r\n+        }\r\n+    }\r\n+});\r\n+  }\r\n   // List<String> names = List.from(document['array_list']);\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n"
                },
                {
                    "date": 1645973268552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,21 +20,13 @@\n   @override\r\n   void initState() {\r\n     // TODO: implement initState\r\n     super.initState();\r\n+ fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n+   print(element[\"item_text_\"]);\r\n+ }));\r\n \r\n \r\n-    \r\n-CollectionReference applicationsRef = fb.collection(\"EnglishQuotes\");\r\n-DocumentReference applicationIdRef = applicationsRef.document(applicationId);\r\n-applicationIdRef.get().addOnCompleteListener(task -> {\r\n-    if (task.isSuccessful()) {\r\n-        DocumentSnapshot document = task.getResult();\r\n-        if (document.exists()) {\r\n-            List<Map<String, Object>> users = (List<Map<String, Object>>) document.get(\"users\");\r\n-        }\r\n-    }\r\n-});\r\n   }\r\n   // List<String> names = List.from(document['array_list']);\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n"
                },
                {
                    "date": 1645973368878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,11 @@\n     // TODO: implement initState\r\n     super.initState();\r\n  fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n    print(element[\"item_text_\"]);\r\n+\r\n+   var data3 = element[\"item_text\"];\r\n+   print(data3);\r\n  }));\r\n \r\n \r\n   }\r\n"
                },
                {
                    "date": 1645977816362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,13 @@\n   @override\r\n   void initState() {\r\n     // TODO: implement initState\r\n     super.initState();\r\n- fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.forEach((element) {\r\n+ fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.\r\n+ forEach((element) {\r\n    print(element[\"item_text_\"]);\r\n \r\n-   var data3 = element[\"item_text\"];\r\n+   var data3 = element[\"item_text_\"];\r\n    print(data3);\r\n  }));\r\n \r\n \r\n"
                },
                {
                    "date": 1645978217296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,17 +20,11 @@\n   @override\r\n   void initState() {\r\n     // TODO: implement initState\r\n     super.initState();\r\n- fb.collection(\"EnglishQuotes\").get().then((QuerySnapshot querySnapshot) => querySnapshot.docs.\r\n- forEach((element) {\r\n-   print(element[\"item_text_\"]);\r\n+ fb.collection(\"EnglishQuotes\").get();\r\n \r\n-   var data3 = element[\"item_text_\"];\r\n-   print(data3);\r\n- }));\r\n \r\n-\r\n   }\r\n   // List<String> names = List.from(document['array_list']);\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n@@ -74,10 +68,10 @@\n                             child: Text(\r\n                               \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n                               style: TextStyle(color:  Colors.brown.shade900, fontSize: 20.0),\r\n                             ),\r\n-                          )\r\n-                          // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n+                          ),\r\n+                           Text(snapshot.data?.docs[index].data()[\"item_text_\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1645978377996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,10 +68,10 @@\n                             child: Text(\r\n                               \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n                               style: TextStyle(color:  Colors.brown.shade900, fontSize: 20.0),\r\n                             ),\r\n-                          ),\r\n-                           Text(snapshot.data?.docs[index].data()[\"item_text_\"]),\r\n+                          )\r\n+                          // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1645979036143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,12 +18,13 @@\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n \r\n   @override\r\n   void initState() {\r\n-    // TODO: implement initState\r\n+   \r\n     super.initState();\r\n- fb.collection(\"EnglishQuotes\").get();\r\n+    getListData();\r\n \r\n+   \r\n \r\n   }\r\n   // List<String> names = List.from(document['array_list']);\r\n \r\n@@ -91,8 +92,24 @@\n           }),\r\n     );\r\n   }\r\n \r\n+   getListData() async  {\r\n+ fb.collection(\"EnglishQuotes\").get().\r\n+ \r\n+ then((querySnapshot){\r\n+      querySnapshot.docs\r\n+    .forEach((element){\r\n+        List value = element[\"item_text_\"];\r\n+       \r\n+          print(value);\r\n+        });\r\n+      });\r\n+    \r\n+\r\n+ \r\n+  }\r\n+\r\n   // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n   //   data = fb.collection(\"quotes\").doc(widget.id).get();\r\n   //   print(data.toString());\r\n \r\n"
                },
                {
                    "date": 1645979082788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,8 @@\n  then((querySnapshot){\r\n       querySnapshot.docs\r\n     .forEach((element){\r\n         List value = element[\"item_text_\"];\r\n-       \r\n           print(value);\r\n         });\r\n       });\r\n     \r\n"
                },
                {
                    "date": 1645979113151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,17 +15,12 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n-\r\n   @override\r\n   void initState() {\r\n-   \r\n     super.initState();\r\n     getListData();\r\n-\r\n-   \r\n-\r\n   }\r\n   // List<String> names = List.from(document['array_list']);\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n@@ -34,12 +29,10 @@\n     String data = widget.name.toString();\r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n-    \r\n       body: FutureBuilder(\r\n-          future:\r\n-           fb.collection(\"$data\").get(),\r\n+          future: fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n@@ -62,14 +55,15 @@\n                       child: Center(\r\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          Padding( \r\n+                          Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                             child: Text(\r\n                               \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n-                              style: TextStyle(color:  Colors.brown.shade900, fontSize: 20.0),\r\n+                              style: TextStyle(\r\n+                                  color: Colors.brown.shade900, fontSize: 20.0),\r\n                             ),\r\n                           )\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n@@ -92,21 +86,15 @@\n           }),\r\n     );\r\n   }\r\n \r\n-   getListData() async  {\r\n- fb.collection(\"EnglishQuotes\").get().\r\n- \r\n- then((querySnapshot){\r\n-      querySnapshot.docs\r\n-    .forEach((element){\r\n+  getListData() async {\r\n+    fb.collection(\"EnglishQuotes\").get().then((querySnapshot) {\r\n+      querySnapshot.docs.forEach((element) {\r\n         List value = element[\"item_text_\"];\r\n-          print(value);\r\n-        });\r\n+        print(value);\r\n       });\r\n-    \r\n-\r\n- \r\n+    });\r\n   }\r\n \r\n   // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n   //   data = fb.collection(\"quotes\").doc(widget.id).get();\r\n"
                },
                {
                    "date": 1645979739655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,16 +86,14 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  getListData() async {\r\n-    fb.collection(\"EnglishQuotes\").get().then((querySnapshot) {\r\n+  Future<Stream<DocumentSnapshot<Map<String ,dynamic>>>>  getListData()  => fb.collection(\"EnglishQuotes\").get().then((querySnapshot) {\r\n       querySnapshot.docs.forEach((element) {\r\n         List value = element[\"item_text_\"];\r\n         print(value);\r\n       });\r\n     });\r\n-  }\r\n \r\n   // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n   //   data = fb.collection(\"quotes\").doc(widget.id).get();\r\n   //   print(data.toString());\r\n"
                },
                {
                    "date": 1645979807055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,11 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  Future<Stream<DocumentSnapshot<Map<String ,dynamic>>>>  getListData()  => fb.collection(\"EnglishQuotes\").get().then((querySnapshot) {\r\n-      querySnapshot.docs.forEach((element) {\r\n+ Stream<DocumentSnapshot<Map<String ,dynamic>>>  getListData()  => \r\n+  fb.collection(\"EnglishQuotes\").get().then((DocumentSnapshot documentSnapshot) {\r\n+      documentSnapshot.docs.forEach((element) {\r\n         List value = element[\"item_text_\"];\r\n         print(value);\r\n       });\r\n     });\r\n"
                },
                {
                    "date": 1645979932144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,11 @@\n           }),\r\n     );\r\n   }\r\n \r\n- Stream<DocumentSnapshot<Map<String ,dynamic>>>  getListData()  => \r\n+ Stream<DocumentSnapshot<Map<String ,dynamic>>>  getListData() {\r\n+   return fb.collection(\"EnglishQuotes\").doc(\"item_text_\").snapshots();\r\n+ }\r\n   fb.collection(\"EnglishQuotes\").get().then((DocumentSnapshot documentSnapshot) {\r\n       documentSnapshot.docs.forEach((element) {\r\n         List value = element[\"item_text_\"];\r\n         print(value);\r\n"
                },
                {
                    "date": 1645979949386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,14 +89,9 @@\n \r\n  Stream<DocumentSnapshot<Map<String ,dynamic>>>  getListData() {\r\n    return fb.collection(\"EnglishQuotes\").doc(\"item_text_\").snapshots();\r\n  }\r\n-  fb.collection(\"EnglishQuotes\").get().then((DocumentSnapshot documentSnapshot) {\r\n-      documentSnapshot.docs.forEach((element) {\r\n-        List value = element[\"item_text_\"];\r\n-        print(value);\r\n-      });\r\n-    });\r\n+  \r\n \r\n   // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n   //   data = fb.collection(\"quotes\").doc(widget.id).get();\r\n   //   print(data.toString());\r\n"
                },
                {
                    "date": 1645979985183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,11 @@\n     );\r\n   }\r\n \r\n  Stream<DocumentSnapshot<Map<String ,dynamic>>>  getListData() {\r\n-   return fb.collection(\"EnglishQuotes\").doc(\"item_text_\").snapshots();\r\n+ var data4 = fb.collection(\"EnglishQuotes\").doc(\"item_text_\").snapshots();\r\n+print(data4);\r\n+return data4;\r\n  }\r\n   \r\n \r\n   // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n"
                },
                {
                    "date": 1645980133012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n   }\r\n \r\n  Stream<DocumentSnapshot<Map<String ,dynamic>>>  getListData() {\r\n  var data4 = fb.collection(\"EnglishQuotes\").doc(\"item_text_\").snapshots();\r\n-print(data4);\r\n+print(data4.first);\r\n return data4;\r\n  }\r\n   \r\n \r\n"
                },
                {
                    "date": 1645980564334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,12 +86,21 @@\n           }),\r\n     );\r\n   }\r\n \r\n- Stream<DocumentSnapshot<Map<String ,dynamic>>>  getListData() {\r\n- var data4 = fb.collection(\"EnglishQuotes\").doc(\"item_text_\").snapshots();\r\n-print(data4.first);\r\n-return data4;\r\n+ Future  getListData() {\r\n+ var data4 = fb.collection(\"EnglishQuotes\").get().then((DocumentSnapshot snapshot){\r\n+   if(snapshot.exists){\r\n+     print(snapshot.data());\r\n+   }else{\r\n+     return \"error\";\r\n+   }\r\n+\r\n+ }),\r\n+ return data4;\r\n+//  doc(\"item_text_\").snapshots();\r\n+// print(data4.first);\r\n+// return data4;\r\n  }\r\n   \r\n \r\n   // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n"
                },
                {
                    "date": 1645980722175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,22 +86,22 @@\n           }),\r\n     );\r\n   }\r\n \r\n- Future  getListData() {\r\n- var data4 = fb.collection(\"EnglishQuotes\").get().then((DocumentSnapshot snapshot){\r\n-   if(snapshot.exists){\r\n-     print(snapshot.data());\r\n-   }else{\r\n-     return \"error\";\r\n-   }\r\n+//  Stream<DocumentSnapshot<Map<String ,dynamic>>>  getListData() {\r\n+//  var data4 = fb.collection(\"EnglishQuotes\").get().then((DocumentSnapshot snapshot){\r\n+//    if(snapshot.exists){\r\n+//      print(snapshot.data());\r\n+//    }else{\r\n+//      return \"error\";\r\n+//    }\r\n \r\n- }),\r\n- return data4;\r\n-//  doc(\"item_text_\").snapshots();\r\n-// print(data4.first);\r\n-// return data4;\r\n- }\r\n+//  });\r\n+//  return data4;\r\n+// //  doc(\"item_text_\").snapshots();\r\n+// // print(data4.first);\r\n+// // return data4;\r\n+//  }\r\n   \r\n \r\n   // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n   //   data = fb.collection(\"quotes\").doc(widget.id).get();\r\n"
                },
                {
                    "date": 1645981003251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   @override\r\n   void initState() {\r\n     super.initState();\r\n-    getListData();\r\n+   // getListData();\r\n   }\r\n   // List<String> names = List.from(document['array_list']);\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n"
                },
                {
                    "date": 1646032618175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,47 +86,4 @@\n           }),\r\n     );\r\n   }\r\n \r\n-//  Stream<DocumentSnapshot<Map<String ,dynamic>>>  getListData() {\r\n-//  var data4 = fb.collection(\"EnglishQuotes\").get().then((DocumentSnapshot snapshot){\r\n-//    if(snapshot.exists){\r\n-//      print(snapshot.data());\r\n-//    }else{\r\n-//      return \"error\";\r\n-//    }\r\n-\r\n-//  });\r\n-//  return data4;\r\n-// //  doc(\"item_text_\").snapshots();\r\n-// // print(data4.first);\r\n-// // return data4;\r\n-//  }\r\n-  \r\n-\r\n-  // Future<DocumentSnapshot<Map<String, dynamic>>> getdata() {\r\n-  //   data = fb.collection(\"quotes\").doc(widget.id).get();\r\n-  //   print(data.toString());\r\n-\r\n-  //   return data;\r\n-  // }\r\n-\r\n-  // Future<QuerySnapshot<Map<String, dynamic>>> getData() {\r\n-  // //data=   fb.collection(\"sweetlines\").get();\r\n-  //   data = fb\r\n-  //       .collection(\"quotes\")\r\n-  //       .doc(widget.id)\r\n-  //       .get();\r\n-  //   print(data);\r\n-  //   return data;\r\n-  // }\r\n-}\r\n- // if (snapshot.hasError) {\r\n-            //   return Text(\"Something went wrong\");\r\n-            // }\r\n-            // if (snapshot.hasData && !snapshot.data!.exists) {\r\n-            //   return Text(\"Document does not exist\");\r\n-            // }\r\n-\r\n-  // final DocumentSnapshot ds;\r\n-                  // ds = snapshot.data!.get('quotes');\r\n-                  //    Map<String, dynamic> data1 = snapshot.data!.data() as Map<String, dynamic>;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1646032650934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   @override\r\n   void initState() {\r\n     super.initState();\r\n-   // getListData();\r\n+    getListData();\r\n   }\r\n   // List<String> names = List.from(document['array_list']);\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n@@ -86,4 +86,11 @@\n           }),\r\n     );\r\n   }\r\n \r\n+ getListData() {\r\n+\r\n+\r\n+\r\n+  }\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1646032684561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,16 @@\n   }\r\n \r\n  getListData() {\r\n \r\n+FirebaseFirestore.instance\r\n+    .collection('EnglishQuotes')\r\n+    .get()\r\n+    .then((QuerySnapshot querySnapshot) {\r\n+        querySnapshot.docs.forEach((doc) {\r\n+            print(doc[\"item_text\"]);\r\n+        });\r\n+    });\r\n \r\n-\r\n   }\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1646032727918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n     .collection('EnglishQuotes')\r\n     .get()\r\n     .then((QuerySnapshot querySnapshot) {\r\n         querySnapshot.docs.forEach((doc) {\r\n-            print(doc[\"item_text\"]);\r\n+            print(doc[\"item_text_\"]);\r\n         });\r\n     });\r\n \r\n   }\r\n"
                },
                {
                    "date": 1646032928460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,10 @@\n                               \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n                               style: TextStyle(\r\n                                   color: Colors.brown.shade900, fontSize: 20.0),\r\n                             ),\r\n-                          )\r\n+                          ),\r\n+                          Text(snapshot.data?.docs[index].data()[\"item_text_\"])\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n@@ -92,8 +93,10 @@\n FirebaseFirestore.instance\r\n     .collection('EnglishQuotes')\r\n     .get()\r\n     .then((QuerySnapshot querySnapshot) {\r\n+\r\n+      \r\n         querySnapshot.docs.forEach((doc) {\r\n             print(doc[\"item_text_\"]);\r\n         });\r\n     });\r\n"
                },
                {
                    "date": 1646032965972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                               style: TextStyle(\r\n                                   color: Colors.brown.shade900, fontSize: 20.0),\r\n                             ),\r\n                           ),\r\n-                          Text(snapshot.data?.docs[index].data()[\"item_text_\"])\r\n+                          Text(snapshot.data!.docs[index].data()[\"item_text_\"])\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n"
                },
                {
                    "date": 1646033017414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                               style: TextStyle(\r\n                                   color: Colors.brown.shade900, fontSize: 20.0),\r\n                             ),\r\n                           ),\r\n-                          Text(snapshot.data!.docs[index].data()[\"item_text_\"])\r\n+                       //   Text(snapshot.data!.docs[index].data()[\"item_text_\"])\r\n                           // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n"
                },
                {
                    "date": 1646033071265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,13 +15,9 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n-  @override\r\n-  void initState() {\r\n-    super.initState();\r\n-    getListData();\r\n-  }\r\n+\r\n   // List<String> names = List.from(document['array_list']);\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n@@ -87,20 +83,7 @@\n           }),\r\n     );\r\n   }\r\n \r\n- getListData() {\r\n+ \r\n \r\n-FirebaseFirestore.instance\r\n-    .collection('EnglishQuotes')\r\n-    .get()\r\n-    .then((QuerySnapshot querySnapshot) {\r\n-\r\n-      \r\n-        querySnapshot.docs.forEach((doc) {\r\n-            print(doc[\"item_text_\"]);\r\n-        });\r\n-    });\r\n-\r\n-  }\r\n-\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1646033083342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n                                   color: Colors.brown.shade900, fontSize: 20.0),\r\n                             ),\r\n                           ),\r\n                        //   Text(snapshot.data!.docs[index].data()[\"item_text_\"])\r\n-                          // Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n+                           Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1646033133261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n                                   color: Colors.brown.shade900, fontSize: 20.0),\r\n                             ),\r\n                           ),\r\n                        //   Text(snapshot.data!.docs[index].data()[\"item_text_\"])\r\n-                           Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n+                      //     Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n"
                },
                {
                    "date": 1646033249764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,13 +54,14 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child: Text(\r\n-                              \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n-                              style: TextStyle(\r\n-                                  color: Colors.brown.shade900, fontSize: 20.0),\r\n-                            ),\r\n+child: Text(snapshot.data?.docs[index].data()[\"item_text\"]),,\r\n+                            // child: Text(\r\n+                            //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n+                            //   style: TextStyle(\r\n+                            //       color: Colors.brown.shade900, fontSize: 20.0),\r\n+                            // ),\r\n                           ),\r\n                        //   Text(snapshot.data!.docs[index].data()[\"item_text_\"])\r\n                       //     Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n"
                },
                {
                    "date": 1646033321678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-child: Text(snapshot.data?.docs[index].data()[\"item_text\"]),,\r\n+child: Text(snapshot.data?.docs[index].data()[\"item_text_\"]),\r\n                             // child: Text(\r\n                             //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n                             //   style: TextStyle(\r\n                             //       color: Colors.brown.shade900, fontSize: 20.0),\r\n"
                },
                {
                    "date": 1646038239571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n \r\n-  // List<String> names = List.from(document['array_list']);\r\n+   List<String> names  = [];\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n@@ -30,10 +30,12 @@\n           future: fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n+              \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n+                  snapshot.data?.docs[index].data()[\"item_text_\"].toString();\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646038250704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                  snapshot.data?.docs[index].data()[\"item_text_\"].toString();\r\n+               names =    snapshot.data?.docs[index].data()[\"item_text_\"].toString();\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646038256591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-               names =    snapshot.data?.docs[index].data()[\"item_text_\"].toString();\r\n+               names =    snapshot.data?.docs[index].data()[\"item_text_\"];\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646038265921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,9 @@\n               \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                names =    snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+               print(names);\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646042906367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n \r\n-   List<String> names  = [];\r\n+   List<dynamic> names  = [];\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n"
                },
                {
                    "date": 1646049174695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-child: Text(snapshot.data?.docs[index].data()[\"item_text_\"]),\r\n+child: Text(snapshot.data?.docs[index].data()[\"item_texts\"]),\r\n                             // child: Text(\r\n                             //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n                             //   style: TextStyle(\r\n                             //       color: Colors.brown.shade900, fontSize: 20.0),\r\n"
                },
                {
                    "date": 1646049412303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n               \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                names =    snapshot.data?.docs[index].data()[\"item_text_\"];\r\n-               print(names);\r\n+               print(names.length);\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646049469401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n \r\n-   List<dynamic> names  = [];\r\n+   String nameData =\" \";\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n"
                },
                {
                    "date": 1646049513969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n \r\n    String nameData =\" \";\r\n+    List<String> servicesList = [];\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n@@ -33,10 +34,10 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-               names =    snapshot.data?.docs[index].data()[\"item_text_\"];\r\n-               print(names.length);\r\n+               nameData =    snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+            \r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646049711537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,10 @@\n               \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                nameData =    snapshot.data?.docs[index].data()[\"item_text_\"];\r\n-            \r\n+          servicesList =  nameData.split(\",\");\r\n+          print(\"this is list of datas== $servicesList\");\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646050005176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,11 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n+  String nameData = \" \";\r\n+  List<String> servicesList = [];\r\n \r\n-   String nameData =\" \";\r\n-    List<String> servicesList = [];\r\n-\r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     String data = widget.name.toString();\r\n@@ -31,14 +30,12 @@\n           future: fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n-              \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-               nameData =    snapshot.data?.docs[index].data()[\"item_text_\"];\r\n-          servicesList =  nameData.split(\",\");\r\n-          print(\"this is list of datas== $servicesList\");\r\n+                  nameData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                 \r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -59,17 +56,18 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-child: Text(snapshot.data?.docs[index].data()[\"item_texts\"]),\r\n+                            child: Text(snapshot.data?.docs[index]\r\n+                                .data()[\"item_texts\"]),\r\n                             // child: Text(\r\n                             //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n                             //   style: TextStyle(\r\n                             //       color: Colors.brown.shade900, fontSize: 20.0),\r\n                             // ),\r\n                           ),\r\n-                       //   Text(snapshot.data!.docs[index].data()[\"item_text_\"])\r\n-                      //     Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n+                          //   Text(snapshot.data!.docs[index].data()[\"item_text_\"])\r\n+                          //     Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n@@ -88,8 +86,5 @@\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n-\r\n- \r\n-\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1646050021082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,9 @@\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                  nameData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n-                 \r\n+                     \r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646051751629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n-  String nameData = \" \";\r\n-  List<String> servicesList = [];\r\n+  // String nameData = \" \";\r\n+  // List<String> servicesList = [];\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n"
                },
                {
                    "date": 1646054685535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,10 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n-          future: fb.collection(\"$data\").get(),\r\n+          future:\r\n+          fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n@@ -85,5 +86,17 @@\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n+\r\n+  getDataFromFIrebase() async {\r\n+\r\n+   QuerySnapshot querySnapshot =\r\n+        await FirebaseFirestore.instance.collection().get();\r\n+    // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n+    //for a specific field\r\n+    final allData =\r\n+        querySnapshot.docs.map((doc) => doc.get('item_text_')).toList();\r\n+    print(\"length = ${allData.length}\");\r\n+\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1646054858746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,21 +9,23 @@\n \r\n class ThoughtsScreen extends StatefulWidget {\r\n   ThoughtsScreen({Key? key, required this.name}) : super(key: key);\r\n   final String? name;\r\n+ \r\n \r\n   @override\r\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n+   late final String ? data;\r\n   // String nameData = \" \";\r\n   // List<String> servicesList = [];\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    String data = widget.name.toString();\r\n+     data = widget.name.toString();\r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n@@ -90,9 +92,9 @@\n \r\n   getDataFromFIrebase() async {\r\n \r\n    QuerySnapshot querySnapshot =\r\n-        await FirebaseFirestore.instance.collection().get();\r\n+        await FirebaseFirestore.instance.collection(\" \").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n     //for a specific field\r\n     final allData =\r\n         querySnapshot.docs.map((doc) => doc.get('item_text_')).toList();\r\n"
                },
                {
                    "date": 1646054907505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n \r\n   getDataFromFIrebase() async {\r\n \r\n    QuerySnapshot querySnapshot =\r\n-        await FirebaseFirestore.instance.collection(\" \").get();\r\n+        await FirebaseFirestore.instance.collection(\"$data\").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n     //for a specific field\r\n     final allData =\r\n         querySnapshot.docs.map((doc) => doc.get('item_text_')).toList();\r\n"
                },
                {
                    "date": 1646054952266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,10 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n-          future:\r\n-          fb.collection(\"$data\").get(),\r\n+          future:getDataFromFIrebase(),\r\n+         // fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n"
                },
                {
                    "date": 1646054961118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n-          future:getDataFromFIrebase(),\r\n+          future:getDataFromFirebase(),\r\n          // fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n@@ -89,9 +89,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  getDataFromFIrebase() async {\r\n+  getDataFromFirebase() async {\r\n \r\n    QuerySnapshot querySnapshot =\r\n         await FirebaseFirestore.instance.collection(\"$data\").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n"
                },
                {
                    "date": 1646055046177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n    late final String ? data;\r\n+   late final allData;\r\n   // String nameData = \" \";\r\n   // List<String> servicesList = [];\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n@@ -90,14 +91,13 @@\n     );\r\n   }\r\n \r\n   getDataFromFirebase() async {\r\n-\r\n    QuerySnapshot querySnapshot =\r\n         await FirebaseFirestore.instance.collection(\"$data\").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n     //for a specific field\r\n-    final allData =\r\n+     allData =\r\n         querySnapshot.docs.map((doc) => doc.get('item_text_')).toList();\r\n     print(\"length = ${allData.length}\");\r\n \r\n   }\r\n"
                },
                {
                    "date": 1646055057220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,7 +98,7 @@\n     //for a specific field\r\n      allData =\r\n         querySnapshot.docs.map((doc) => doc.get('item_text_')).toList();\r\n     print(\"length = ${allData.length}\");\r\n-\r\n+return allData ;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1646055278829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,9 @@\n               AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                     \r\n-                  return GestureDetector(\r\n+                               return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n                         SnackBar(\r\n@@ -59,10 +58,11 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child: Text(snapshot.data?.docs[index]\r\n-                                .data()[\"item_texts\"]),\r\n+                            child:Text(allData),\r\n+                            //  Text(snapshot.data?.docs[index]\r\n+                            //     .data()[\"item_texts\"]),\r\n                             // child: Text(\r\n                             //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n                             //   style: TextStyle(\r\n                             //       color: Colors.brown.shade900, fontSize: 20.0),\r\n@@ -74,9 +74,10 @@\n                       )),\r\n                     ),\r\n                   );\r\n                 },\r\n-                itemCount: snapshot.data!.docs.length,\r\n+               //  snapshot.data!.docs.length,\r\n+                itemCount:allData.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646055829630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n       body: FutureBuilder(\r\n           future:getDataFromFirebase(),\r\n          // fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n-              AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {\r\n+              AsyncSnapshot<QuerySnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                                return GestureDetector(\r\n"
                },
                {
                    "date": 1646055919055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n-   late final String ? data;\r\n+  String? data;\r\n    late final allData;\r\n   // String nameData = \" \";\r\n   // List<String> servicesList = [];\r\n \r\n"
                },
                {
                    "date": 1646056145904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  getDataFromFirebase() async {\r\n+ Future<QuerySnapshot> getDataFromFirebase() async {\r\n    QuerySnapshot querySnapshot =\r\n         await FirebaseFirestore.instance.collection(\"$data\").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n     //for a specific field\r\n"
                },
                {
                    "date": 1646111452317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   String? data;\r\n-   late final allData;\r\n+   late final allData= [];\r\n   // String nameData = \" \";\r\n   // List<String> servicesList = [];\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n"
                },
                {
                    "date": 1646111539370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,10 +96,10 @@\n    QuerySnapshot querySnapshot =\r\n         await FirebaseFirestore.instance.collection(\"$data\").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n     //for a specific field\r\n-     allData =\r\n-        querySnapshot.docs.map((doc) => doc.get('item_text_')).toList();\r\n+     allData.add(\r\n+        querySnapshot.docs.map((doc) => doc.get('item_text_')).toList());\r\n     print(\"length = ${allData.length}\");\r\n-return allData ;\r\n+return allData[] ;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1646111568893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,7 +99,7 @@\n     //for a specific field\r\n      allData.add(\r\n         querySnapshot.docs.map((doc) => doc.get('item_text_')).toList());\r\n     print(\"length = ${allData.length}\");\r\n-return allData[] ;\r\n+\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1646111611256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child:Text(allData),\r\n+                            child:Text(allData[index]),\r\n                             //  Text(snapshot.data?.docs[index]\r\n                             //     .data()[\"item_texts\"]),\r\n                             // child: Text(\r\n                             //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n@@ -91,9 +91,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n- Future<QuerySnapshot> getDataFromFirebase() async {\r\n+ Future<QuerySnapshot > getDataFromFirebase() async {\r\n    QuerySnapshot querySnapshot =\r\n         await FirebaseFirestore.instance.collection(\"$data\").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n     //for a specific field\r\n"
                },
                {
                    "date": 1646111682773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,10 +90,9 @@\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n-\r\n- Future<QuerySnapshot > getDataFromFirebase() async {\r\n+ getDataFromFirebase() async {\r\n    QuerySnapshot querySnapshot =\r\n         await FirebaseFirestore.instance.collection(\"$data\").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n     //for a specific field\r\n"
                },
                {
                    "date": 1646113073986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,11 +90,11 @@\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n- getDataFromFirebase() async {\r\n-   QuerySnapshot querySnapshot =\r\n-        await FirebaseFirestore.instance.collection(\"$data\").get();\r\n+ getDataFromFirebase()  {\r\n+   Future<QuerySnapshot<Map<String, dynamic>>> querySnapshot =\r\n+         FirebaseFirestore.instance.collection(\"$data\").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n     //for a specific field\r\n      allData.add(\r\n         querySnapshot.docs.map((doc) => doc.get('item_text_')).toList());\r\n"
                },
                {
                    "date": 1646113148909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n       body: FutureBuilder(\r\n           future:getDataFromFirebase(),\r\n          // fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n-              AsyncSnapshot<QuerySnapshot> snapshot) {\r\n+              AsyncSnapshot<QuerySnapshot <dynamic>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                                return GestureDetector(\r\n@@ -90,11 +90,11 @@\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n- getDataFromFirebase()  {\r\n-   Future<QuerySnapshot<Map<String, dynamic>>> querySnapshot =\r\n-         FirebaseFirestore.instance.collection(\"$data\").get();\r\n+ getDataFromFirebase() async {\r\n+   QuerySnapshot querySnapshot =\r\n+        await FirebaseFirestore.instance.collection(\"$data\").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n     //for a specific field\r\n      allData.add(\r\n         querySnapshot.docs.map((doc) => doc.get('item_text_')).toList());\r\n"
                },
                {
                    "date": 1646113404975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,12 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n-          future:getDataFromFirebase(),\r\n-         // fb.collection(\"$data\").get(),\r\n+          future:\r\n+         fb.collection(\"$data\").get().then((value) => {\r\n+           value.data()[\"item_text_\"]\r\n+         }),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot <dynamic>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n"
                },
                {
                    "date": 1646113836905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,12 +29,10 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n-          future:\r\n-         fb.collection(\"$data\").get().then((value) => {\r\n-           value.data()[\"item_text_\"]\r\n-         }),\r\n+          future:getDataFromFirebase(),\r\n+         // fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot <dynamic>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n"
                },
                {
                    "date": 1646114269685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child:Text(allData[index]),\r\n+                            child:Text(snapshot.data?.docs[index].data()[\"item_text_\"]),\r\n                             //  Text(snapshot.data?.docs[index]\r\n                             //     .data()[\"item_texts\"]),\r\n                             // child: Text(\r\n                             //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n@@ -90,9 +90,17 @@\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n- getDataFromFirebase() async {\r\n+ getDataFromFirebase(DocumentSnapshot snapshot) async {\r\n+\r\n+final value = await FirebaseFirestore.instance\r\n+    .collection(\"$data\")\r\n+  \r\n+    .get();\r\n+\r\n+friendsList = value.docs[index].;\r\n+\r\n    QuerySnapshot querySnapshot =\r\n         await FirebaseFirestore.instance.collection(\"$data\").get();\r\n     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n     //for a specific field\r\n"
                },
                {
                    "date": 1646114287433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,23 +90,23 @@\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n- getDataFromFirebase(DocumentSnapshot snapshot) async {\r\n+//  getDataFromFirebase(DocumentSnapshot snapshot) async {\r\n \r\n-final value = await FirebaseFirestore.instance\r\n-    .collection(\"$data\")\r\n+// final value = await FirebaseFirestore.instance\r\n+//     .collection(\"$data\")\r\n   \r\n-    .get();\r\n+//     .get();\r\n \r\n-friendsList = value.docs[index].;\r\n+// friendsList = value.docs[index].;\r\n \r\n-   QuerySnapshot querySnapshot =\r\n-        await FirebaseFirestore.instance.collection(\"$data\").get();\r\n-    // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n-    //for a specific field\r\n-     allData.add(\r\n-        querySnapshot.docs.map((doc) => doc.get('item_text_')).toList());\r\n-    print(\"length = ${allData.length}\");\r\n+//    QuerySnapshot querySnapshot =\r\n+//         await FirebaseFirestore.instance.collection(\"$data\").get();\r\n+//     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n+//     //for a specific field\r\n+//      allData.add(\r\n+//         querySnapshot.docs.map((doc) => doc.get('item_text_')).toList());\r\n+//     print(\"length = ${allData.length}\");\r\n \r\n-  }\r\n+//  }\r\n }\r\n"
                },
                {
                    "date": 1646114299832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n-          future:getDataFromFirebase(),\r\n-         // fb.collection(\"$data\").get(),\r\n+          future:\r\n+          fb.collection(\"$data\").get(),\r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot <dynamic>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n"
                },
                {
                    "date": 1646114872989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   String? data;\r\n-   late final allData= [];\r\n+   List  allData= [];\r\n   // String nameData = \" \";\r\n   // List<String> servicesList = [];\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n@@ -31,13 +31,17 @@\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n           future:\r\n           fb.collection(\"$data\").get(),\r\n+\r\n+          \r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot <dynamic>> snapshot) {\r\n+              \r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n+                    allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n                                return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -59,8 +63,10 @@\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                             child:Text(snapshot.data?.docs[index].data()[\"item_text_\"]),\r\n+\r\n+                            \r\n                             //  Text(snapshot.data?.docs[index]\r\n                             //     .data()[\"item_texts\"]),\r\n                             // child: Text(\r\n                             //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n"
                },
                {
                    "date": 1646114894446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,10 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                     allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+\r\n+                    print(\"list of data = $allData\")\r\n                                return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646116835693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                     allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                    print(\"list of data = $allData\")\r\n+                    print(\"list of data = $allData\");\r\n                                return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -64,9 +64,9 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child:Text(snapshot.data?.docs[index].data()[\"item_text_\"]),\r\n+                            child:Text(allData[index].toString()),\r\n \r\n                             \r\n                             //  Text(snapshot.data?.docs[index]\r\n                             //     .data()[\"item_texts\"]),\r\n"
                },
                {
                    "date": 1646117266006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:allData.length,\r\n+                itemCount:1,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646118191015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child:Text(allData[index].toString()),\r\n+                            child:Text(allData[0].toString()),\r\n \r\n                             \r\n                             //  Text(snapshot.data?.docs[index]\r\n                             //     .data()[\"item_texts\"]),\r\n"
                },
                {
                    "date": 1646118298080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   String? data;\r\n-   List  allData= [];\r\n+   List<String>  allData= [];\r\n   // String nameData = \" \";\r\n   // List<String> servicesList = [];\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n"
                },
                {
                    "date": 1646118321844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child:Text(allData[0].toString()),\r\n+                            child:Text(allData[index].toString()),\r\n \r\n                             \r\n                             //  Text(snapshot.data?.docs[index]\r\n                             //     .data()[\"item_texts\"]),\r\n"
                },
                {
                    "date": 1646482995812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                     allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                    print(\"list of data = $allData\");\r\n+                    print(\"list of data = ${allData[index]}\");\r\n                                return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -64,9 +64,9 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child:Text(allData[index].toString()),\r\n+                            child:Text(allData[0].toString()),\r\n \r\n                             \r\n                             //  Text(snapshot.data?.docs[index]\r\n                             //     .data()[\"item_texts\"]),\r\n"
                },
                {
                    "date": 1646483409134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   String? data;\r\n-   List<String>  allData= [];\r\n+   List<dynamic>  allData= [];\r\n   // String nameData = \" \";\r\n   // List<String> servicesList = [];\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n"
                },
                {
                    "date": 1646483469474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:1,\r\n+                itemCount:allData.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646483594849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:allData.length,\r\n+                itemCount:snapshot.data!.docs.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646484035613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child:Text(allData[0].toString()),\r\n+                            child:Text(allData[index].toString()),\r\n \r\n                             \r\n                             //  Text(snapshot.data?.docs[index]\r\n                             //     .data()[\"item_texts\"]),\r\n"
                },
                {
                    "date": 1646484065291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:snapshot.data!.docs.length,\r\n+                itemCount:2,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646484106019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:2,\r\n+                itemCount:21,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646484135877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:21,\r\n+                itemCount:1,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646484339424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                     allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                    print(\"list of data = ${allData[index]}\");\r\n+                    print(\"list of data = ${allData[1]}\");\r\n                                return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646484374118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                     allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                    print(\"list of data = ${allData[1]}\");\r\n+                    print(\"list of data = ${allData[2]}\");\r\n                                return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646485625449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n      data = widget.name.toString();\r\n+     int length ;   \r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n@@ -42,8 +43,10 @@\n                 itemBuilder: (BuildContext context, int index) {\r\n                     allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n                     print(\"list of data = ${allData[2]}\");\r\n+                     print(\"length  of data = ${allData.length}\");\r\n+                     length = allData.length;\r\n                                return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646485635933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:1,\r\n+                itemCount:length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646485703673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n      data = widget.name.toString();\r\n-     int length ;   \r\n+     int length  ;   \r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n@@ -86,9 +86,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:length,\r\n+                itemCount:allData.length.toInt(),\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646485991680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n               \r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                    allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                    allData[index] = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n                     print(\"list of data = ${allData[2]}\");\r\n                      print(\"length  of data = ${allData.length}\");\r\n                      length = allData.length;\r\n@@ -86,9 +86,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:allData.length.toInt(),\r\n+                itemCount:snapshot.data?.docs.data()[\"item_text_\"],\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646486007654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:snapshot.data?.docs.data()[\"item_text_\"],\r\n+                itemCount:allData.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646486501983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,9 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                     allData[index] = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                  \r\n \r\n                     print(\"list of data = ${allData[2]}\");\r\n                      print(\"length  of data = ${allData.length}\");\r\n                      length = allData.length;\r\n@@ -86,9 +87,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:allData.length,\r\n+                itemCount:allData.length-1,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646486736660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n               \r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                    allData[index] = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                    allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n                   \r\n \r\n                     print(\"list of data = ${allData[2]}\");\r\n                      print(\"length  of data = ${allData.length}\");\r\n"
                },
                {
                    "date": 1646486772681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:allData.length-1,\r\n+                itemCount:allData.length+1,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646487998375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,14 @@\n   String? data;\r\n    List<dynamic>  allData= [];\r\n   // String nameData = \" \";\r\n   // List<String> servicesList = [];\r\n+  @override\r\n+  void initState() {\r\n+    // TODO: implement initState\r\n+    super.initState();\r\n+    getData();\r\n+  }\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n@@ -102,8 +108,21 @@\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n+\r\n+  void getData() async{\r\n+\r\n+    DocumentSnapshot<Map<String, dynamic>> snap = await \r\n+    fb.collection('EnglishQuotes').doc(\"item_text_\").get();\r\n+\r\n+for (int i = 0; i < snap.get(\"item_text_\").length; i++) {\r\n+    var a = snap.documents[i];\r\n+    print(a.documentID);\r\n+  }\r\n+\r\n+\r\n+  }\r\n //  getDataFromFirebase(DocumentSnapshot snapshot) async {\r\n \r\n // final value = await FirebaseFirestore.instance\r\n //     .collection(\"$data\")\r\n"
                },
                {
                    "date": 1646488022118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,10 +115,10 @@\n     DocumentSnapshot<Map<String, dynamic>> snap = await \r\n     fb.collection('EnglishQuotes').doc(\"item_text_\").get();\r\n \r\n for (int i = 0; i < snap.get(\"item_text_\").length; i++) {\r\n-    var a = snap.documents[i];\r\n-    print(a.documentID);\r\n+    var a = snap.data();\r\n+    print(a);\r\n   }\r\n \r\n \r\n   }\r\n"
                },
                {
                    "date": 1646488046527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,9 @@\n     fb.collection('EnglishQuotes').doc(\"item_text_\").get();\r\n \r\n for (int i = 0; i < snap.get(\"item_text_\").length; i++) {\r\n     var a = snap.data();\r\n+    print(\"data from IS\");\r\n     print(a);\r\n   }\r\n \r\n \r\n"
                },
                {
                    "date": 1646488162434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,14 +20,14 @@\n   String? data;\r\n    List<dynamic>  allData= [];\r\n   // String nameData = \" \";\r\n   // List<String> servicesList = [];\r\n-  @override\r\n-  void initState() {\r\n-    // TODO: implement initState\r\n-    super.initState();\r\n-    getData();\r\n-  }\r\n+  // @override\r\n+  // void initState() {\r\n+  //   // TODO: implement initState\r\n+  //   super.initState();\r\n+  //   getData();\r\n+  // }\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n"
                },
                {
                    "date": 1646488198482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:allData.length+1,\r\n+                itemCount:allData.length-1,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646488238344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                 itemBuilder: (BuildContext context, int index) {\r\n                     allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n                   \r\n \r\n-                    print(\"list of data = ${allData[2]}\");\r\n+                    print(\"list of data = ${allData[1]}\");\r\n                      print(\"length  of data = ${allData.length}\");\r\n                      length = allData.length;\r\n                                return GestureDetector(\r\n                     onLongPress: () {\r\n"
                },
                {
                    "date": 1646488288466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:allData.length-1,\r\n+                itemCount:allData.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646488330797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:allData.length,\r\n+                itemCount:2,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646488372657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                //  snapshot.data!.docs.length,\r\n-                itemCount:2,\r\n+                itemCount:1,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n"
                },
                {
                    "date": 1646488694105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,19 +36,21 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n-          future:\r\n-          fb.collection(\"$data\").get(),\r\n+          future:getData(),\r\n+        //  fb.collection(\"$data\").get(),\r\n \r\n-          \r\n+  \r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot <dynamic>> snapshot) {\r\n               \r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n+\r\n+             // allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                    allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                   /// allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n                   \r\n \r\n                     print(\"list of data = ${allData[1]}\");\r\n                      print(\"length  of data = ${allData.length}\");\r\n@@ -109,17 +111,18 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  void getData() async{\r\n-\r\n-    DocumentSnapshot<Map<String, dynamic>> snap = await \r\n-    fb.collection('EnglishQuotes').doc(\"item_text_\").get();\r\n-\r\n-for (int i = 0; i < snap.get(\"item_text_\").length; i++) {\r\n-    var a = snap.data();\r\n-    print(\"data from IS\");\r\n-    print(a);\r\n+   getData() async{\r\n+FirebaseFirestore.instance\r\n+    .collection('EnglishQuotes')\r\n+    .get()\r\n+    .then((QuerySnapshot querySnapshot) {\r\n+        querySnapshot.docs.forEach((doc) {\r\n+            print(doc[\"item_text_\"]);\r\n+        });\r\n+    });\r\n+   \r\n   }\r\n \r\n \r\n   }\r\n"
                },
                {
                    "date": 1646488704197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,5 +143,5 @@\n //         querySnapshot.docs.map((doc) => doc.get('item_text_')).toList());\r\n //     print(\"length = ${allData.length}\");\r\n \r\n //  }\r\n-}\r\n+\r\n"
                },
                {
                    "date": 1646488945190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-   getData() async{\r\n+ getData() async{\r\n FirebaseFirestore.instance\r\n     .collection('EnglishQuotes')\r\n     .get()\r\n     .then((QuerySnapshot querySnapshot) {\r\n"
                },
                {
                    "date": 1646489172635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,10 +111,10 @@\n           }),\r\n     );\r\n   }\r\n \r\n- getData() async{\r\n-FirebaseFirestore.instance\r\n+ Future<QuerySnapshot<dynamic>>?  getData() async{\r\n+return FirebaseFirestore.instance\r\n     .collection('EnglishQuotes')\r\n     .get()\r\n     .then((QuerySnapshot querySnapshot) {\r\n         querySnapshot.docs.forEach((doc) {\r\n"
                },
                {
                    "date": 1646489441651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,16 +18,16 @@\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   String? data;\r\n    List<dynamic>  allData= [];\r\n-  // String nameData = \" \";\r\n-  // List<String> servicesList = [];\r\n-  // @override\r\n-  // void initState() {\r\n-  //   // TODO: implement initState\r\n-  //   super.initState();\r\n-  //   getData();\r\n-  // }\r\n+  String nameData = \" \";\r\n+  List<String> servicesList = [];\r\n+  @override\r\n+  void initState() {\r\n+    // TODO: implement initState\r\n+    super.initState();\r\n+    getData();\r\n+  }\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n@@ -36,10 +36,10 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n-          future:getData(),\r\n-        //  fb.collection(\"$data\").get(),\r\n+          future:\r\n+          fb.collection(\"$data\").get(),\r\n \r\n   \r\n           builder: (context,\r\n               AsyncSnapshot<QuerySnapshot <dynamic>> snapshot) {\r\n@@ -110,19 +110,18 @@\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n-\r\n- Future<QuerySnapshot<dynamic>>?  getData() async{\r\n-return FirebaseFirestore.instance\r\n+   getData() async{\r\n+var data5 = FirebaseFirestore.instance\r\n     .collection('EnglishQuotes')\r\n     .get()\r\n-    .then((QuerySnapshot querySnapshot) {\r\n-        querySnapshot.docs.forEach((doc) {\r\n+    .then((QuerySnapshot? querySnapshot) {\r\n+        querySnapshot!.docs.forEach((doc) {\r\n             print(doc[\"item_text_\"]);\r\n         });\r\n     });\r\n-   \r\n+   return data5;\r\n   }\r\n \r\n \r\n   }\r\n"
                },
                {
                    "date": 1646489535951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,8 @@\n   String nameData = \" \";\r\n   List<String> servicesList = [];\r\n   @override\r\n   void initState() {\r\n-    // TODO: implement initState\r\n     super.initState();\r\n     getData();\r\n   }\r\n \r\n"
                },
                {
                    "date": 1646489949562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,17 +9,16 @@\n \r\n class ThoughtsScreen extends StatefulWidget {\r\n   ThoughtsScreen({Key? key, required this.name}) : super(key: key);\r\n   final String? name;\r\n- \r\n \r\n   @override\r\n   State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n }\r\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   String? data;\r\n-   List<dynamic>  allData= [];\r\n+  List<dynamic> allData = [];\r\n   String nameData = \" \";\r\n   List<String> servicesList = [];\r\n   @override\r\n   void initState() {\r\n@@ -29,33 +28,26 @@\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-     data = widget.name.toString();\r\n-     int length  ;   \r\n+    data = widget.name.toString();\r\n+    int length;\r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n-          future:\r\n-          fb.collection(\"$data\").get(),\r\n-\r\n-  \r\n-          builder: (context,\r\n-              AsyncSnapshot<QuerySnapshot <dynamic>> snapshot) {\r\n-              \r\n+          future: fb.collection(\"$data\").get(),\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot<dynamic>> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n-\r\n-             // allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+              // allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                   /// allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n-                  \r\n+                  /// allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                    print(\"list of data = ${allData[1]}\");\r\n-                     print(\"length  of data = ${allData.length}\");\r\n-                     length = allData.length;\r\n-                               return GestureDetector(\r\n+                  print(\"list of data = ${allData[1]}\");\r\n+                  print(\"length  of data = ${allData.length}\");\r\n+                  length = allData.length;\r\n+                  return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n                         SnackBar(\r\n@@ -75,11 +67,10 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child:Text(allData[index].toString()),\r\n+                            child: Text(allData[index].toString()),\r\n \r\n-                            \r\n                             //  Text(snapshot.data?.docs[index]\r\n                             //     .data()[\"item_texts\"]),\r\n                             // child: Text(\r\n                             //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n@@ -93,10 +84,10 @@\n                       )),\r\n                     ),\r\n                   );\r\n                 },\r\n-               //  snapshot.data!.docs.length,\r\n-                itemCount:1,\r\n+                //  snapshot.data!.docs.length,\r\n+                itemCount: 1,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n@@ -109,22 +100,21 @@\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n-   getData() async{\r\n-var data5 = FirebaseFirestore.instance\r\n-    .collection('EnglishQuotes')\r\n-    .get()\r\n-    .then((QuerySnapshot? querySnapshot) {\r\n-        querySnapshot!.docs.forEach((doc) {\r\n-            print(doc[\"item_text_\"]);\r\n-        });\r\n+\r\n+  getData() async {\r\n+    var data5 = FirebaseFirestore.instance\r\n+        .collection('EnglishQuotes')\r\n+        .get()\r\n+        .then((QuerySnapshot? querySnapshot) {\r\n+      querySnapshot!.docs.forEach((doc) {\r\n+        print(\"getData = ${doc[\"item_text_\"]}\");\r\n+      });\r\n     });\r\n-   return data5;\r\n+    return data5;\r\n   }\r\n-\r\n-\r\n-  }\r\n+}\r\n //  getDataFromFirebase(DocumentSnapshot snapshot) async {\r\n \r\n // final value = await FirebaseFirestore.instance\r\n //     .collection(\"$data\")\r\n"
                },
                {
                    "date": 1646489997393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               // allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                  /// allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                   allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n                   print(\"list of data = ${allData[1]}\");\r\n                   print(\"length  of data = ${allData.length}\");\r\n                   length = allData.length;\r\n"
                },
                {
                    "date": 1646490216854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,12 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n-          future: fb.collection(\"$data\").get(),\r\n-          builder: (context, AsyncSnapshot<QuerySnapshot<dynamic>> snapshot) {\r\n+          future: getData(),\r\n+          \r\n+        //  fb.collection(\"$data\").get(),\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               // allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n"
                },
                {
                    "date": 1646490282759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,13 @@\n   String? data;\r\n   List<dynamic> allData = [];\r\n   String nameData = \" \";\r\n   List<String> servicesList = [];\r\n-  @override\r\n-  void initState() {\r\n-    super.initState();\r\n-    getData();\r\n-  }\r\n+  // @override\r\n+  // void initState() {\r\n+  //   super.initState();\r\n+  //   getData();\r\n+  // }\r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n@@ -39,12 +39,12 @@\n           \r\n         //  fb.collection(\"$data\").get(),\r\n           builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n-              // allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+             \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                   allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                 //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n                   print(\"list of data = ${allData[1]}\");\r\n                   print(\"length  of data = ${allData.length}\");\r\n                   length = allData.length;\r\n@@ -105,9 +105,9 @@\n   }\r\n \r\n   getData() async {\r\n     var data5 = FirebaseFirestore.instance\r\n-        .collection('EnglishQuotes')\r\n+        .collection('$data')\r\n         .get()\r\n         .then((QuerySnapshot? querySnapshot) {\r\n       querySnapshot!.docs.forEach((doc) {\r\n         print(\"getData = ${doc[\"item_text_\"]}\");\r\n"
                },
                {
                    "date": 1646490535589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n-  getData() async {\r\n+ Future<QuerySnapshot> getData() async {\r\n     var data5 = FirebaseFirestore.instance\r\n         .collection('$data')\r\n         .get()\r\n         .then((QuerySnapshot? querySnapshot) {\r\n"
                },
                {
                    "date": 1646490671888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n       body: FutureBuilder(\r\n           future: getData(),\r\n           \r\n         //  fb.collection(\"$data\").get(),\r\n-          builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot?>  snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n              \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n@@ -103,9 +103,9 @@\n           }),\r\n     );\r\n   }\r\n \r\n- Future<QuerySnapshot> getData() async {\r\n+ Future<QuerySnapshot?>  getData() async {\r\n     var data5 = FirebaseFirestore.instance\r\n         .collection('$data')\r\n         .get()\r\n         .then((QuerySnapshot? querySnapshot) {\r\n"
                },
                {
                    "date": 1646490857110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n   String? data;\r\n   List<dynamic> allData = [];\r\n   String nameData = \" \";\r\n   List<String> servicesList = [];\r\n+  var dataofItem  ;\r\n   // @override\r\n   // void initState() {\r\n   //   super.initState();\r\n   //   getData();\r\n@@ -35,11 +36,10 @@\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n           future: getData(),\r\n-          \r\n-        //  fb.collection(\"$data\").get(),\r\n-          builder: (context, AsyncSnapshot<QuerySnapshot?>  snapshot) {\r\n+     \r\n+         builder: (context, AsyncSnapshot<QuerySnapshot?>  snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n              \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n@@ -104,17 +104,17 @@\n     );\r\n   }\r\n \r\n  Future<QuerySnapshot?>  getData() async {\r\n-    var data5 = FirebaseFirestore.instance\r\n+    dataofItem = FirebaseFirestore.instance\r\n         .collection('$data')\r\n         .get()\r\n         .then((QuerySnapshot? querySnapshot) {\r\n       querySnapshot!.docs.forEach((doc) {\r\n         print(\"getData = ${doc[\"item_text_\"]}\");\r\n       });\r\n     });\r\n-    return data5;\r\n+    return dataofItem;\r\n   }\r\n }\r\n //  getDataFromFirebase(DocumentSnapshot snapshot) async {\r\n \r\n"
                },
                {
                    "date": 1646490872337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,13 +42,13 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n              \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                 //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                  print(\"list of data = ${allData[1]}\");\r\n-                  print(\"length  of data = ${allData.length}\");\r\n-                  length = allData.length;\r\n+                //   print(\"list of data = ${allData[1]}\");\r\n+                //   print(\"length  of data = ${allData.length}\");\r\n+                //   length = allData.length;\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1646490966512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                 //  snapshot.data!.docs.length,\r\n-                itemCount: 1,\r\n+                itemCount: dataofItem,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n@@ -109,9 +109,12 @@\n         .collection('$data')\r\n         .get()\r\n         .then((QuerySnapshot? querySnapshot) {\r\n       querySnapshot!.docs.forEach((doc) {\r\n-        print(\"getData = ${doc[\"item_text_\"]}\");\r\n+\r\n+allData = doc[\"item_text_\"];\r\n+ print(\"allData = $allData\");\r\n+      //  print(\"getData = ${doc[\"item_text_\"]}\");\r\n       });\r\n     });\r\n     return dataofItem;\r\n   }\r\n"
                },
                {
                    "date": 1646490982654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   String? data;\r\n   List<dynamic> allData = [];\r\n   String nameData = \" \";\r\n   List<String> servicesList = [];\r\n-  var dataofItem  ;\r\n+  var dataofItem;\r\n   // @override\r\n   // void initState() {\r\n   //   super.initState();\r\n   //   getData();\r\n@@ -36,19 +36,17 @@\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n           future: getData(),\r\n-     \r\n-         builder: (context, AsyncSnapshot<QuerySnapshot?>  snapshot) {\r\n+          builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n-             \r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n-                //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                  //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                //   print(\"list of data = ${allData[1]}\");\r\n-                //   print(\"length  of data = ${allData.length}\");\r\n-                //   length = allData.length;\r\n+                  //   print(\"list of data = ${allData[1]}\");\r\n+                  //   print(\"length  of data = ${allData.length}\");\r\n+                  //   length = allData.length;\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -87,9 +85,9 @@\n                     ),\r\n                   );\r\n                 },\r\n                 //  snapshot.data!.docs.length,\r\n-                itemCount: dataofItem,\r\n+                itemCount: allData.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n                 pagination: SwiperPagination(),\r\n@@ -103,18 +101,17 @@\n           }),\r\n     );\r\n   }\r\n \r\n- Future<QuerySnapshot?>  getData() async {\r\n+  Future<QuerySnapshot?> getData() async {\r\n     dataofItem = FirebaseFirestore.instance\r\n         .collection('$data')\r\n         .get()\r\n         .then((QuerySnapshot? querySnapshot) {\r\n       querySnapshot!.docs.forEach((doc) {\r\n-\r\n-allData = doc[\"item_text_\"];\r\n- print(\"allData = $allData\");\r\n-      //  print(\"getData = ${doc[\"item_text_\"]}\");\r\n+        allData = doc[\"item_text_\"];\r\n+        print(\"allData = $allData\");\r\n+        //  print(\"getData = ${doc[\"item_text_\"]}\");\r\n       });\r\n     });\r\n     return dataofItem;\r\n   }\r\n"
                },
                {
                    "date": 1646492275216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,12 +41,9 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n-\r\n-                  //   print(\"list of data = ${allData[1]}\");\r\n-                  //   print(\"length  of data = ${allData.length}\");\r\n-                  //   length = allData.length;\r\n+                  \r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -69,10 +66,9 @@\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                             child: Text(allData[index].toString()),\r\n \r\n-                            //  Text(snapshot.data?.docs[index]\r\n-                            //     .data()[\"item_texts\"]),\r\n+                           \r\n                             // child: Text(\r\n                             //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n                             //   style: TextStyle(\r\n                             //       color: Colors.brown.shade900, fontSize: 20.0),\r\n@@ -84,9 +80,9 @@\n                       )),\r\n                     ),\r\n                   );\r\n                 },\r\n-                //  snapshot.data!.docs.length,\r\n+              \r\n                 itemCount: allData.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n@@ -95,9 +91,8 @@\n               );\r\n             } else if (snapshot.connectionState == ConnectionState.none) {\r\n               return Text(\"No data\");\r\n             }\r\n-\r\n             return Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1646492382040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n             if (snapshot.connectionState == ConnectionState.done) {\r\n               return Swiper(\r\n                 itemBuilder: (BuildContext context, int index) {\r\n                   //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n-                  \r\n+\r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -64,25 +64,20 @@\n                         children: [\r\n                           Padding(\r\n                             padding: EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child: Text(allData[index].toString()),\r\n-\r\n-                           \r\n-                            // child: Text(\r\n-                            //   \"The Paragraphs module in Drupal provides editors with a component driven architecture for building pages. Morpht has been developing Paragraph approaches to site building since 2015. This case study captures some of the content from a Drupal 7  Paragraphs Demo site which was built to showcase what could be done with Paragraphs.\",\r\n-                            //   style: TextStyle(\r\n-                            //       color: Colors.brown.shade900, fontSize: 20.0),\r\n-                            // ),\r\n+                            child: Text(\r\n+                              allData[index].toString(),\r\n+                              style: TextStyle(\r\n+                                  color: Colors.brown.shade900, fontSize: 20.0),\r\n+                            ),\r\n                           ),\r\n-                          //   Text(snapshot.data!.docs[index].data()[\"item_text_\"])\r\n-                          //     Text(snapshot.data?.docs[index].data()[\"item_text\"]),\r\n                         ],\r\n                       )),\r\n                     ),\r\n                   );\r\n                 },\r\n-              \r\n+\r\n                 itemCount: allData.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n"
                },
                {
                    "date": 1646492402328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,23 +105,5 @@\n     });\r\n     return dataofItem;\r\n   }\r\n }\r\n-//  getDataFromFirebase(DocumentSnapshot snapshot) async {\r\n \r\n-// final value = await FirebaseFirestore.instance\r\n-//     .collection(\"$data\")\r\n-  \r\n-//     .get();\r\n-\r\n-// friendsList = value.docs[index].;\r\n-\r\n-//    QuerySnapshot querySnapshot =\r\n-//         await FirebaseFirestore.instance.collection(\"$data\").get();\r\n-//     // final allData = querySnapshot.docs.map((doc) => doc.data()).toList();\r\n-//     //for a specific field\r\n-//      allData.add(\r\n-//         querySnapshot.docs.map((doc) => doc.get('item_text_')).toList());\r\n-//     print(\"length = ${allData.length}\");\r\n-\r\n-//  }\r\n-\r\n"
                },
                {
                    "date": 1646492409941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,13 +20,9 @@\n   List<dynamic> allData = [];\r\n   String nameData = \" \";\r\n   List<String> servicesList = [];\r\n   var dataofItem;\r\n-  // @override\r\n-  // void initState() {\r\n-  //   super.initState();\r\n-  //   getData();\r\n-  // }\r\n+  \r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n"
                },
                {
                    "date": 1646492417829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n                 itemCount: allData.length,\r\n                 itemWidth: MediaQuery.of(context).size.width * 1,\r\n                 itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                 layout: SwiperLayout.TINDER,\r\n-                pagination: SwiperPagination(),\r\n+                pagination: const SwiperPagination(),\r\n                 // control: SwiperControl(),\r\n               );\r\n             } else if (snapshot.connectionState == ConnectionState.none) {\r\n               return Text(\"No data\");\r\n"
                },
                {
                    "date": 1646492431642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,11 +80,11 @@\n                 pagination: const SwiperPagination(),\r\n                 // control: SwiperControl(),\r\n               );\r\n             } else if (snapshot.connectionState == ConnectionState.none) {\r\n-              return Text(\"No data\");\r\n+              return const Text(\"No data\");\r\n             }\r\n-            return Center(child: CircularProgressIndicator());\r\n+            return const Center(child: CircularProgressIndicator());\r\n           }),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1646492439390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n                           child: Column(\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n                           Padding(\r\n-                            padding: EdgeInsets.only(\r\n+                            padding: const EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                             child: Text(\r\n                               allData[index].toString(),\r\n                               style: TextStyle(\r\n"
                },
                {
                    "date": 1646492445143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n                     onLongPress: () {\r\n                       Clipboard.setData(ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n                         SnackBar(\r\n-                          content: Text(\"Text copied to clipboard\"),\r\n+                          content: const Text(\"Text copied to clipboard\"),\r\n                         ),\r\n                       );\r\n                     },\r\n                     child: Container(\r\n"
                },
                {
                    "date": 1646492454137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,12 +40,12 @@\n                   //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n                   return GestureDetector(\r\n                     onLongPress: () {\r\n-                      Clipboard.setData(ClipboardData(text: \"your text\"));\r\n+                      Clipboard.setData(const ClipboardData(text: \"your text\"));\r\n                       ScaffoldMessenger.of(context).showSnackBar(\r\n-                        SnackBar(\r\n-                          content: const Text(\"Text copied to clipboard\"),\r\n+                        const SnackBar(\r\n+                          content: Text(\"Text copied to clipboard\"),\r\n                         ),\r\n                       );\r\n                     },\r\n                     child: Container(\r\n"
                },
                {
                    "date": 1646492466666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     data = widget.name.toString();\r\n     int length;\r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n-      backgroundColor: Color(0xFF1e3d59),\r\n+      backgroundColor: const Color(0xFF1e3d59),\r\n       body: FutureBuilder(\r\n           future: getData(),\r\n           builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n             if (snapshot.connectionState == ConnectionState.done) {\r\n"
                },
                {
                    "date": 1646571698040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,62 +30,70 @@\n     int length;\r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: const Color(0xFF1e3d59),\r\n-      body: FutureBuilder(\r\n-          future: getData(),\r\n-          builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n-            if (snapshot.connectionState == ConnectionState.done) {\r\n-              return Swiper(\r\n-                itemBuilder: (BuildContext context, int index) {\r\n-                  //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+      body: Column(\r\n+        crossAxisAlignment: CrossAxisAlignment.start,\r\n+        children: [\r\n+          Row(children: [\r\n+            Text(\"data\"),\r\n+          ],),\r\n+          FutureBuilder(\r\n+              future: getData(),\r\n+              builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n+                if (snapshot.connectionState == ConnectionState.done) {\r\n+                  return Swiper(\r\n+                    itemBuilder: (BuildContext context, int index) {\r\n+                      //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                  return GestureDetector(\r\n-                    onLongPress: () {\r\n-                      Clipboard.setData(const ClipboardData(text: \"your text\"));\r\n-                      ScaffoldMessenger.of(context).showSnackBar(\r\n-                        const SnackBar(\r\n-                          content: Text(\"Text copied to clipboard\"),\r\n+                      return GestureDetector(\r\n+                        onLongPress: () {\r\n+                          Clipboard.setData(const ClipboardData(text: \"your text\"));\r\n+                          ScaffoldMessenger.of(context).showSnackBar(\r\n+                            const SnackBar(\r\n+                              content: Text(\"Text copied to clipboard\"),\r\n+                            ),\r\n+                          );\r\n+                        },\r\n+                        child: Container(\r\n+                          decoration: BoxDecoration(\r\n+                              color: Color(0xFFf5f0e1),\r\n+                              border: Border.all(\r\n+                                  color: Colors.amber.shade900, width: 3),\r\n+                              borderRadius: BorderRadius.circular(25.0)),\r\n+                          child: Center(\r\n+                              child: Column(\r\n+                            crossAxisAlignment: CrossAxisAlignment.center,\r\n+                            children: [\r\n+                              Padding(\r\n+                                padding: const EdgeInsets.only(\r\n+                                    top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n+                                child: Text(\r\n+                                  allData[index].toString(),\r\n+                                  style: TextStyle(\r\n+                                      color: Colors.brown.shade900, fontSize: 20.0),\r\n+                                ),\r\n+                              ),\r\n+                            ],\r\n+                          )),\r\n                         ),\r\n                       );\r\n                     },\r\n-                    child: Container(\r\n-                      decoration: BoxDecoration(\r\n-                          color: Color(0xFFf5f0e1),\r\n-                          border: Border.all(\r\n-                              color: Colors.amber.shade900, width: 3),\r\n-                          borderRadius: BorderRadius.circular(25.0)),\r\n-                      child: Center(\r\n-                          child: Column(\r\n-                        crossAxisAlignment: CrossAxisAlignment.center,\r\n-                        children: [\r\n-                          Padding(\r\n-                            padding: const EdgeInsets.only(\r\n-                                top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child: Text(\r\n-                              allData[index].toString(),\r\n-                              style: TextStyle(\r\n-                                  color: Colors.brown.shade900, fontSize: 20.0),\r\n-                            ),\r\n-                          ),\r\n-                        ],\r\n-                      )),\r\n-                    ),\r\n+\r\n+                    itemCount: allData.length,\r\n+                    itemWidth: MediaQuery.of(context).size.width * 1,\r\n+                    itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n+                    layout: SwiperLayout.TINDER,\r\n+                    pagination: const SwiperPagination(),\r\n+                    // control: SwiperControl(),\r\n                   );\r\n-                },\r\n-\r\n-                itemCount: allData.length,\r\n-                itemWidth: MediaQuery.of(context).size.width * 1,\r\n-                itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n-                layout: SwiperLayout.TINDER,\r\n-                pagination: const SwiperPagination(),\r\n-                // control: SwiperControl(),\r\n-              );\r\n-            } else if (snapshot.connectionState == ConnectionState.none) {\r\n-              return const Text(\"No data\");\r\n-            }\r\n-            return const Center(child: CircularProgressIndicator());\r\n-          }),\r\n+                } else if (snapshot.connectionState == ConnectionState.none) {\r\n+                  return const Text(\"No data\");\r\n+                }\r\n+                return const Center(child: CircularProgressIndicator());\r\n+              }),\r\n+        ],\r\n+      ),\r\n     );\r\n   }\r\n \r\n   Future<QuerySnapshot?> getData() async {\r\n"
                },
                {
                    "date": 1646571764501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n     return Scaffold(\r\n       backgroundColor: const Color(0xFF1e3d59),\r\n       body: Column(\r\n         crossAxisAlignment: CrossAxisAlignment.start,\r\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n         children: [\r\n           Row(children: [\r\n             Text(\"data\"),\r\n           ],),\r\n"
                },
                {
                    "date": 1646571958556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: const Color(0xFF1e3d59),\r\n       body: Column(\r\n-        crossAxisAlignment: CrossAxisAlignment.start,\r\n+        crossAxisAlignment: CrossAxisAlignment.baseline,\r\n         mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n         children: [\r\n           Row(children: [\r\n             Text(\"data\"),\r\n"
                },
                {
                    "date": 1646572015911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,70 +30,73 @@\n     int length;\r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: const Color(0xFF1e3d59),\r\n-      body: Column(\r\n-        crossAxisAlignment: CrossAxisAlignment.baseline,\r\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-        children: [\r\n-          Row(children: [\r\n-            Text(\"data\"),\r\n-          ],),\r\n-          FutureBuilder(\r\n-              future: getData(),\r\n-              builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n-                if (snapshot.connectionState == ConnectionState.done) {\r\n-                  return Swiper(\r\n-                    itemBuilder: (BuildContext context, int index) {\r\n-                      //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+      body: Padding(\r\n+        padding: const EdgeInsets.only(top: 20.0),\r\n+        child: Column(\r\n+          crossAxisAlignment: CrossAxisAlignment.start,\r\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+          children: [\r\n+            Row(children: [\r\n+              Text(\"data\"),\r\n+            ],),\r\n+            FutureBuilder(\r\n+                future: getData(),\r\n+                builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n+                  if (snapshot.connectionState == ConnectionState.done) {\r\n+                    return Swiper(\r\n+                      itemBuilder: (BuildContext context, int index) {\r\n+                        //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                      return GestureDetector(\r\n-                        onLongPress: () {\r\n-                          Clipboard.setData(const ClipboardData(text: \"your text\"));\r\n-                          ScaffoldMessenger.of(context).showSnackBar(\r\n-                            const SnackBar(\r\n-                              content: Text(\"Text copied to clipboard\"),\r\n-                            ),\r\n-                          );\r\n-                        },\r\n-                        child: Container(\r\n-                          decoration: BoxDecoration(\r\n-                              color: Color(0xFFf5f0e1),\r\n-                              border: Border.all(\r\n-                                  color: Colors.amber.shade900, width: 3),\r\n-                              borderRadius: BorderRadius.circular(25.0)),\r\n-                          child: Center(\r\n-                              child: Column(\r\n-                            crossAxisAlignment: CrossAxisAlignment.center,\r\n-                            children: [\r\n-                              Padding(\r\n-                                padding: const EdgeInsets.only(\r\n-                                    top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                                child: Text(\r\n-                                  allData[index].toString(),\r\n-                                  style: TextStyle(\r\n-                                      color: Colors.brown.shade900, fontSize: 20.0),\r\n+                        return GestureDetector(\r\n+                          onLongPress: () {\r\n+                            Clipboard.setData(const ClipboardData(text: \"your text\"));\r\n+                            ScaffoldMessenger.of(context).showSnackBar(\r\n+                              const SnackBar(\r\n+                                content: Text(\"Text copied to clipboard\"),\r\n+                              ),\r\n+                            );\r\n+                          },\r\n+                          child: Container(\r\n+                            decoration: BoxDecoration(\r\n+                                color: Color(0xFFf5f0e1),\r\n+                                border: Border.all(\r\n+                                    color: Colors.amber.shade900, width: 3),\r\n+                                borderRadius: BorderRadius.circular(25.0)),\r\n+                            child: Center(\r\n+                                child: Column(\r\n+                              crossAxisAlignment: CrossAxisAlignment.center,\r\n+                              children: [\r\n+                                Padding(\r\n+                                  padding: const EdgeInsets.only(\r\n+                                      top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n+                                  child: Text(\r\n+                                    allData[index].toString(),\r\n+                                    style: TextStyle(\r\n+                                        color: Colors.brown.shade900, fontSize: 20.0),\r\n+                                  ),\r\n                                 ),\r\n-                              ),\r\n-                            ],\r\n-                          )),\r\n-                        ),\r\n-                      );\r\n-                    },\r\n+                              ],\r\n+                            )),\r\n+                          ),\r\n+                        );\r\n+                      },\r\n \r\n-                    itemCount: allData.length,\r\n-                    itemWidth: MediaQuery.of(context).size.width * 1,\r\n-                    itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n-                    layout: SwiperLayout.TINDER,\r\n-                    pagination: const SwiperPagination(),\r\n-                    // control: SwiperControl(),\r\n-                  );\r\n-                } else if (snapshot.connectionState == ConnectionState.none) {\r\n-                  return const Text(\"No data\");\r\n-                }\r\n-                return const Center(child: CircularProgressIndicator());\r\n-              }),\r\n-        ],\r\n+                      itemCount: allData.length,\r\n+                      itemWidth: MediaQuery.of(context).size.width * 1,\r\n+                      itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n+                      layout: SwiperLayout.TINDER,\r\n+                      pagination: const SwiperPagination(),\r\n+                      // control: SwiperControl(),\r\n+                    );\r\n+                  } else if (snapshot.connectionState == ConnectionState.none) {\r\n+                    return const Text(\"No data\");\r\n+                  }\r\n+                  return const Center(child: CircularProgressIndicator());\r\n+                }),\r\n+          ],\r\n+        ),\r\n       ),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1646572041694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       body: Padding(\r\n         padding: const EdgeInsets.only(top: 20.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+         // mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Row(children: [\r\n               Text(\"data\"),\r\n             ],),\r\n"
                },
                {
                    "date": 1646572100958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,14 +31,17 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: const Color(0xFF1e3d59),\r\n       body: Padding(\r\n-        padding: const EdgeInsets.only(top: 20.0),\r\n+        padding: const EdgeInsets.only(top: 25.0,left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n          // mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n-            Row(children: [\r\n+            Row(\r\n+              mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n+              \r\n+              children: [\r\n               Text(\"data\"),\r\n             ],),\r\n             FutureBuilder(\r\n                 future: getData(),\r\n"
                },
                {
                    "date": 1646572122049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n          // mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n-              \r\n+              crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n               Text(\"data\"),\r\n             ],),\r\n             FutureBuilder(\r\n"
                },
                {
                    "date": 1646572177278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n          // mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n-              crossAxisAlignment: CrossAxisAlignment.stretch,\r\n+              //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n               Text(\"data\"),\r\n             ],),\r\n             FutureBuilder(\r\n"
                },
                {
                    "date": 1646572302570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       body: Padding(\r\n         padding: const EdgeInsets.only(top: 25.0,left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n-         // mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n"
                },
                {
                    "date": 1646572330405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       body: Padding(\r\n         padding: const EdgeInsets.only(top: 25.0,left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+          mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n"
                },
                {
                    "date": 1646572471484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n-              Text(\"data\"),\r\n+              Text(\"data\",style: TextStyle(color: Colors.amber),),\r\n             ],),\r\n             FutureBuilder(\r\n                 future: getData(),\r\n                 builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n"
                },
                {
                    "date": 1646572583152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       body: Padding(\r\n         padding: const EdgeInsets.only(top: 25.0,left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n-          mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n"
                },
                {
                    "date": 1646572600756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       body: Padding(\r\n         padding: const EdgeInsets.only(top: 25.0,left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+       //   mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n"
                },
                {
                    "date": 1646572649888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n                       itemCount: allData.length,\r\n                       itemWidth: MediaQuery.of(context).size.width * 1,\r\n                       itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                       layout: SwiperLayout.TINDER,\r\n-                      pagination: const SwiperPagination(),\r\n+                      pagination: const SwiperPagination(alignment: Alignment.bottomCenter),\r\n                       // control: SwiperControl(),\r\n                     );\r\n                   } else if (snapshot.connectionState == ConnectionState.none) {\r\n                     return const Text(\"No data\");\r\n"
                },
                {
                    "date": 1646572714881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,52 +46,54 @@\n             FutureBuilder(\r\n                 future: getData(),\r\n                 builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n                   if (snapshot.connectionState == ConnectionState.done) {\r\n-                    return Swiper(\r\n-                      itemBuilder: (BuildContext context, int index) {\r\n-                        //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                    return Center(\r\n+                      child: Swiper(\r\n+                        itemBuilder: (BuildContext context, int index) {\r\n+                          //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                        return GestureDetector(\r\n-                          onLongPress: () {\r\n-                            Clipboard.setData(const ClipboardData(text: \"your text\"));\r\n-                            ScaffoldMessenger.of(context).showSnackBar(\r\n-                              const SnackBar(\r\n-                                content: Text(\"Text copied to clipboard\"),\r\n-                              ),\r\n-                            );\r\n-                          },\r\n-                          child: Container(\r\n-                            decoration: BoxDecoration(\r\n-                                color: Color(0xFFf5f0e1),\r\n-                                border: Border.all(\r\n-                                    color: Colors.amber.shade900, width: 3),\r\n-                                borderRadius: BorderRadius.circular(25.0)),\r\n-                            child: Center(\r\n-                                child: Column(\r\n-                              crossAxisAlignment: CrossAxisAlignment.center,\r\n-                              children: [\r\n-                                Padding(\r\n-                                  padding: const EdgeInsets.only(\r\n-                                      top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                                  child: Text(\r\n-                                    allData[index].toString(),\r\n-                                    style: TextStyle(\r\n-                                        color: Colors.brown.shade900, fontSize: 20.0),\r\n+                          return GestureDetector(\r\n+                            onLongPress: () {\r\n+                              Clipboard.setData(const ClipboardData(text: \"your text\"));\r\n+                              ScaffoldMessenger.of(context).showSnackBar(\r\n+                                const SnackBar(\r\n+                                  content: Text(\"Text copied to clipboard\"),\r\n+                                ),\r\n+                              );\r\n+                            },\r\n+                            child: Container(\r\n+                              decoration: BoxDecoration(\r\n+                                  color: Color(0xFFf5f0e1),\r\n+                                  border: Border.all(\r\n+                                      color: Colors.amber.shade900, width: 3),\r\n+                                  borderRadius: BorderRadius.circular(25.0)),\r\n+                              child: Center(\r\n+                                  child: Column(\r\n+                                crossAxisAlignment: CrossAxisAlignment.center,\r\n+                                children: [\r\n+                                  Padding(\r\n+                                    padding: const EdgeInsets.only(\r\n+                                        top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n+                                    child: Text(\r\n+                                      allData[index].toString(),\r\n+                                      style: TextStyle(\r\n+                                          color: Colors.brown.shade900, fontSize: 20.0),\r\n+                                    ),\r\n                                   ),\r\n-                                ),\r\n-                              ],\r\n-                            )),\r\n-                          ),\r\n-                        );\r\n-                      },\r\n+                                ],\r\n+                              )),\r\n+                            ),\r\n+                          );\r\n+                        },\r\n \r\n-                      itemCount: allData.length,\r\n-                      itemWidth: MediaQuery.of(context).size.width * 1,\r\n-                      itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n-                      layout: SwiperLayout.TINDER,\r\n-                      pagination: const SwiperPagination(alignment: Alignment.bottomCenter),\r\n-                      // control: SwiperControl(),\r\n+                        itemCount: allData.length,\r\n+                        itemWidth: MediaQuery.of(context).size.width * 1,\r\n+                        itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n+                        layout: SwiperLayout.TINDER,\r\n+                        pagination: const SwiperPagination(alignment: Alignment.bottomCenter),\r\n+                        // control: SwiperControl(),\r\n+                      ),\r\n                     );\r\n                   } else if (snapshot.connectionState == ConnectionState.none) {\r\n                     return const Text(\"No data\");\r\n                   }\r\n"
                },
                {
                    "date": 1646572766853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n               Text(\"data\",style: TextStyle(color: Colors.amber),),\r\n             ],),\r\n+            SizedBox(height: 15.0,),\r\n             FutureBuilder(\r\n                 future: getData(),\r\n                 builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n                   if (snapshot.connectionState == ConnectionState.done) {\r\n"
                },
                {
                    "date": 1646572775321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n               Text(\"data\",style: TextStyle(color: Colors.amber),),\r\n             ],),\r\n-            SizedBox(height: 15.0,),\r\n+            SizedBox(height: 25.0,),\r\n             FutureBuilder(\r\n                 future: getData(),\r\n                 builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n                   if (snapshot.connectionState == ConnectionState.done) {\r\n"
                },
                {
                    "date": 1646572782425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n               Text(\"data\",style: TextStyle(color: Colors.amber),),\r\n             ],),\r\n-            SizedBox(height: 25.0,),\r\n+            SizedBox(height: 45.0,),\r\n             FutureBuilder(\r\n                 future: getData(),\r\n                 builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n                   if (snapshot.connectionState == ConnectionState.done) {\r\n"
                },
                {
                    "date": 1646572792940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       body: Padding(\r\n         padding: const EdgeInsets.only(top: 25.0,left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n-       //   mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n"
                },
                {
                    "date": 1646572814474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       body: Padding(\r\n         padding: const EdgeInsets.only(top: 25.0,left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+        mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n"
                },
                {
                    "date": 1646572828271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       body: Padding(\r\n         padding: const EdgeInsets.only(top: 25.0,left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n-        mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+        mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n"
                },
                {
                    "date": 1646572839947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       body: Padding(\r\n         padding: const EdgeInsets.only(top: 25.0,left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n-        mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n"
                },
                {
                    "date": 1646572883756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,9 @@\n                                       style: TextStyle(\r\n                                           color: Colors.brown.shade900, fontSize: 20.0),\r\n                                     ),\r\n                                   ),\r\n+                                   SizedBox(height: 45.0,), \r\n                                 ],\r\n                               )),\r\n                             ),\r\n                           );\r\n"
                },
                {
                    "date": 1646572931222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,55 +47,53 @@\n             FutureBuilder(\r\n                 future: getData(),\r\n                 builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n                   if (snapshot.connectionState == ConnectionState.done) {\r\n-                    return Center(\r\n-                      child: Swiper(\r\n-                        itemBuilder: (BuildContext context, int index) {\r\n-                          //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+                    return Swiper(\r\n+                      itemBuilder: (BuildContext context, int index) {\r\n+                        //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                          return GestureDetector(\r\n-                            onLongPress: () {\r\n-                              Clipboard.setData(const ClipboardData(text: \"your text\"));\r\n-                              ScaffoldMessenger.of(context).showSnackBar(\r\n-                                const SnackBar(\r\n-                                  content: Text(\"Text copied to clipboard\"),\r\n+                        return GestureDetector(\r\n+                          onLongPress: () {\r\n+                            Clipboard.setData(const ClipboardData(text: \"your text\"));\r\n+                            ScaffoldMessenger.of(context).showSnackBar(\r\n+                              const SnackBar(\r\n+                                content: Text(\"Text copied to clipboard\"),\r\n+                              ),\r\n+                            );\r\n+                          },\r\n+                          child: Container(\r\n+                            decoration: BoxDecoration(\r\n+                                color: Color(0xFFf5f0e1),\r\n+                                border: Border.all(\r\n+                                    color: Colors.amber.shade900, width: 3),\r\n+                                borderRadius: BorderRadius.circular(25.0)),\r\n+                            child: Center(\r\n+                                child: Column(\r\n+                              crossAxisAlignment: CrossAxisAlignment.center,\r\n+                              children: [\r\n+                                Padding(\r\n+                                  padding: const EdgeInsets.only(\r\n+                                      top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n+                                  child: Text(\r\n+                                    allData[index].toString(),\r\n+                                    style: TextStyle(\r\n+                                        color: Colors.brown.shade900, fontSize: 20.0),\r\n+                                  ),\r\n                                 ),\r\n-                              );\r\n-                            },\r\n-                            child: Container(\r\n-                              decoration: BoxDecoration(\r\n-                                  color: Color(0xFFf5f0e1),\r\n-                                  border: Border.all(\r\n-                                      color: Colors.amber.shade900, width: 3),\r\n-                                  borderRadius: BorderRadius.circular(25.0)),\r\n-                              child: Center(\r\n-                                  child: Column(\r\n-                                crossAxisAlignment: CrossAxisAlignment.center,\r\n-                                children: [\r\n-                                  Padding(\r\n-                                    padding: const EdgeInsets.only(\r\n-                                        top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                                    child: Text(\r\n-                                      allData[index].toString(),\r\n-                                      style: TextStyle(\r\n-                                          color: Colors.brown.shade900, fontSize: 20.0),\r\n-                                    ),\r\n-                                  ),\r\n-                                   SizedBox(height: 45.0,), \r\n-                                ],\r\n-                              )),\r\n-                            ),\r\n-                          );\r\n-                        },\r\n+                                 SizedBox(height: 45.0,), \r\n+                              ],\r\n+                            )),\r\n+                          ),\r\n+                        );\r\n+                      },\r\n \r\n-                        itemCount: allData.length,\r\n-                        itemWidth: MediaQuery.of(context).size.width * 1,\r\n-                        itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n-                        layout: SwiperLayout.TINDER,\r\n-                        pagination: const SwiperPagination(alignment: Alignment.bottomCenter),\r\n-                        // control: SwiperControl(),\r\n-                      ),\r\n+                      itemCount: allData.length,\r\n+                      itemWidth: MediaQuery.of(context).size.width * 1,\r\n+                      itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n+                      layout: SwiperLayout.TINDER,\r\n+                      pagination: const SwiperPagination(alignment: Alignment.bottomCenter),\r\n+                      // control: SwiperControl(),\r\n                     );\r\n                   } else if (snapshot.connectionState == ConnectionState.none) {\r\n                     return const Text(\"No data\");\r\n                   }\r\n"
                },
                {
                    "date": 1646573036439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n                                     style: TextStyle(\r\n                                         color: Colors.brown.shade900, fontSize: 20.0),\r\n                                   ),\r\n                                 ),\r\n-                                 SizedBox(height: 45.0,), \r\n+                                 \r\n                               ],\r\n                             )),\r\n                           ),\r\n                         );\r\n@@ -98,8 +98,10 @@\n                     return const Text(\"No data\");\r\n                   }\r\n                   return const Center(child: CircularProgressIndicator());\r\n                 }),\r\n+\r\n+                SizedBox(height: 45.0,), \r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1646573394078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,10 @@\n                             child: Center(\r\n                                 child: Column(\r\n                               crossAxisAlignment: CrossAxisAlignment.center,\r\n                               children: [\r\n+\r\n+                                IconButton(onPressed: (){}, icon: Icon(Icons.copy_all_outlined)),\r\n                                 Padding(\r\n                                   padding: const EdgeInsets.only(\r\n                                       top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                                   child: Text(\r\n"
                },
                {
                    "date": 1646573425606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,26 +66,25 @@\n                                 color: Color(0xFFf5f0e1),\r\n                                 border: Border.all(\r\n                                     color: Colors.amber.shade900, width: 3),\r\n                                 borderRadius: BorderRadius.circular(25.0)),\r\n-                            child: Center(\r\n-                                child: Column(\r\n+                            child: Column(\r\n                               crossAxisAlignment: CrossAxisAlignment.center,\r\n                               children: [\r\n \r\n-                                IconButton(onPressed: (){}, icon: Icon(Icons.copy_all_outlined)),\r\n-                                Padding(\r\n-                                  padding: const EdgeInsets.only(\r\n-                                      top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                                  child: Text(\r\n-                                    allData[index].toString(),\r\n-                                    style: TextStyle(\r\n-                                        color: Colors.brown.shade900, fontSize: 20.0),\r\n-                                  ),\r\n-                                ),\r\n-                                 \r\n+                            IconButton(onPressed: (){}, icon: Icon(Icons.copy_all_outlined)),\r\n+                            Padding(\r\n+                              padding: const EdgeInsets.only(\r\n+                                  top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n+                              child: Text(\r\n+                                allData[index].toString(),\r\n+                                style: TextStyle(\r\n+                                    color: Colors.brown.shade900, fontSize: 20.0),\r\n+                              ),\r\n+                            ),\r\n+                             \r\n                               ],\r\n-                            )),\r\n+                            ),\r\n                           ),\r\n                         );\r\n                       },\r\n \r\n"
                },
                {
                    "date": 1646573445867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n                                 border: Border.all(\r\n                                     color: Colors.amber.shade900, width: 3),\r\n                                 borderRadius: BorderRadius.circular(25.0)),\r\n                             child: Column(\r\n-                              crossAxisAlignment: CrossAxisAlignment.center,\r\n+                              //crossAxisAlignment: CrossAxisAlignment.center,\r\n                               children: [\r\n \r\n                             IconButton(onPressed: (){}, icon: Icon(Icons.copy_all_outlined)),\r\n                             Padding(\r\n"
                },
                {
                    "date": 1646573576708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,25 +66,17 @@\n                                 color: Color(0xFFf5f0e1),\r\n                                 border: Border.all(\r\n                                     color: Colors.amber.shade900, width: 3),\r\n                                 borderRadius: BorderRadius.circular(25.0)),\r\n-                            child: Column(\r\n-                              //crossAxisAlignment: CrossAxisAlignment.center,\r\n-                              children: [\r\n-\r\n-                            IconButton(onPressed: (){}, icon: Icon(Icons.copy_all_outlined)),\r\n-                            Padding(\r\n+                            child: Padding(\r\n                               padding: const EdgeInsets.only(\r\n                                   top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                               child: Text(\r\n                                 allData[index].toString(),\r\n                                 style: TextStyle(\r\n                                     color: Colors.brown.shade900, fontSize: 20.0),\r\n                               ),\r\n                             ),\r\n-                             \r\n-                              ],\r\n-                            ),\r\n                           ),\r\n                         );\r\n                       },\r\n \r\n"
                },
                {
                    "date": 1646573614946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n               Text(\"data\",style: TextStyle(color: Colors.amber),),\r\n             ],),\r\n-            SizedBox(height: 45.0,),\r\n+          //  SizedBox(height: 45.0,),\r\n             FutureBuilder(\r\n                 future: getData(),\r\n                 builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n                   if (snapshot.connectionState == ConnectionState.done) {\r\n"
                },
                {
                    "date": 1646573629957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n               Text(\"data\",style: TextStyle(color: Colors.amber),),\r\n             ],),\r\n-          //  SizedBox(height: 45.0,),\r\n+         \r\n             FutureBuilder(\r\n                 future: getData(),\r\n                 builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n                   if (snapshot.connectionState == ConnectionState.done) {\r\n"
                },
                {
                    "date": 1646573673614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n                       itemCount: allData.length,\r\n                       itemWidth: MediaQuery.of(context).size.width * 1,\r\n                       itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                       layout: SwiperLayout.TINDER,\r\n-                      pagination: const SwiperPagination(alignment: Alignment.bottomCenter),\r\n+                   //   pagination: const SwiperPagination(alignment: Alignment.bottomCenter),\r\n                       // control: SwiperControl(),\r\n                     );\r\n                   } else if (snapshot.connectionState == ConnectionState.none) {\r\n                     return const Text(\"No data\");\r\n"
                },
                {
                    "date": 1646575442413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n                       itemCount: allData.length,\r\n                       itemWidth: MediaQuery.of(context).size.width * 1,\r\n                       itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                       layout: SwiperLayout.TINDER,\r\n-                   //   pagination: const SwiperPagination(alignment: Alignment.bottomCenter),\r\n+                      pagination: const SwiperPagination(alignment: Alignment.bottomCenter),\r\n                       // control: SwiperControl(),\r\n                     );\r\n                   } else if (snapshot.connectionState == ConnectionState.none) {\r\n                     return const Text(\"No data\");\r\n"
                },
                {
                    "date": 1646575532593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,10 @@\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n-              Text(\"data\",style: TextStyle(color: Colors.amber),),\r\n+              Text(\"$data\",style: TextStyle(color: Colors.amber),),\r\n+              IconButton(onPressed: (){}, icon: Icon(Icons.menu))\r\n             ],),\r\n          \r\n             FutureBuilder(\r\n                 future: getData(),\r\n"
                },
                {
                    "date": 1646575550830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n         mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Row(\r\n-              mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n               Text(\"$data\",style: TextStyle(color: Colors.amber),),\r\n               IconButton(onPressed: (){}, icon: Icon(Icons.menu))\r\n"
                },
                {
                    "date": 1646575739158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   String? data;\r\n   List<dynamic> allData = [];\r\n-  String nameData = \" \";\r\n+  String copyString =\"\";\r\n   List<String> servicesList = [];\r\n   var dataofItem;\r\n   \r\n \r\n@@ -40,10 +40,10 @@\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n-              Text(\"$data\",style: TextStyle(color: Colors.amber),),\r\n-              IconButton(onPressed: (){}, icon: Icon(Icons.menu))\r\n+              Text(\"$data\",style: const TextStyle(color: Colors.amber),),\r\n+              IconButton(onPressed: (){}, icon: const Icon(Icons.menu))\r\n             ],),\r\n          \r\n             FutureBuilder(\r\n                 future: getData(),\r\n"
                },
                {
                    "date": 1646575762965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n                             child: Padding(\r\n                               padding: const EdgeInsets.only(\r\n                                   top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                               child: Text(\r\n-                                allData[index].toString(),\r\n+                              copyString =   allData[index].toString(),\r\n                                 style: TextStyle(\r\n                                     color: Colors.brown.shade900, fontSize: 20.0),\r\n                               ),\r\n                             ),\r\n"
                },
                {
                    "date": 1646576091333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n-              Text(\"$data\",style: const TextStyle(color: Colors.amber),),\r\n+              Text(\"$data\",style: const TextStyle(color: Colors.amber, fontSize: 23.0),),\r\n               IconButton(onPressed: (){}, icon: const Icon(Icons.menu))\r\n             ],),\r\n          \r\n             FutureBuilder(\r\n@@ -54,9 +54,9 @@\n                         //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n                         return GestureDetector(\r\n                           onLongPress: () {\r\n-                            Clipboard.setData(const ClipboardData(text: \"your text\"));\r\n+                            Clipboard.setData(const ClipboardData(text: \"data\"));\r\n                             ScaffoldMessenger.of(context).showSnackBar(\r\n                               const SnackBar(\r\n                                 content: Text(\"Text copied to clipboard\"),\r\n                               ),\r\n@@ -70,10 +70,10 @@\n                                 borderRadius: BorderRadius.circular(25.0)),\r\n                             child: Padding(\r\n                               padding: const EdgeInsets.only(\r\n                                   top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                              child: Text(\r\n-                              copyString =   allData[index].toString(),\r\n+                                  child: Text(\r\n+                                 allData[index].toString(),\r\n                                 style: TextStyle(\r\n                                     color: Colors.brown.shade900, fontSize: 20.0),\r\n                               ),\r\n                             ),\r\n"
                },
                {
                    "date": 1646576361688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,31 +52,21 @@\n                     return Swiper(\r\n                       itemBuilder: (BuildContext context, int index) {\r\n                         //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                        return GestureDetector(\r\n-                          onLongPress: () {\r\n-                            Clipboard.setData(const ClipboardData(text: \"data\"));\r\n-                            ScaffoldMessenger.of(context).showSnackBar(\r\n-                              const SnackBar(\r\n-                                content: Text(\"Text copied to clipboard\"),\r\n-                              ),\r\n-                            );\r\n-                          },\r\n-                          child: Container(\r\n-                            decoration: BoxDecoration(\r\n-                                color: Color(0xFFf5f0e1),\r\n-                                border: Border.all(\r\n-                                    color: Colors.amber.shade900, width: 3),\r\n-                                borderRadius: BorderRadius.circular(25.0)),\r\n-                            child: Padding(\r\n-                              padding: const EdgeInsets.only(\r\n-                                  top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                                  child: Text(\r\n-                                 allData[index].toString(),\r\n-                                style: TextStyle(\r\n-                                    color: Colors.brown.shade900, fontSize: 20.0),\r\n-                              ),\r\n+                        return Container(\r\n+                          decoration: BoxDecoration(\r\n+                              color: Color(0xFFf5f0e1),\r\n+                              border: Border.all(\r\n+                                  color: Colors.amber.shade900, width: 3),\r\n+                              borderRadius: BorderRadius.circular(25.0)),\r\n+                          child: Padding(\r\n+                            padding: const EdgeInsets.only(\r\n+                                top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n+                                child: Text(\r\n+                               allData[index].toString(),\r\n+                              style: TextStyle(\r\n+                                  color: Colors.brown.shade900, fontSize: 20.0),\r\n                             ),\r\n                           ),\r\n                         );\r\n                       },\r\n"
                },
                {
                    "date": 1646576387820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,11 @@\n \r\n class _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n   String? data;\r\n   List<dynamic> allData = [];\r\n-  String copyString =\"\";\r\n+  String copyString = \"\";\r\n   List<String> servicesList = [];\r\n   var dataofItem;\r\n-  \r\n \r\n   final FirebaseFirestore fb = FirebaseFirestore.instance;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n@@ -31,21 +30,24 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: const Color(0xFF1e3d59),\r\n       body: Padding(\r\n-        padding: const EdgeInsets.only(top: 25.0,left: 15.0),\r\n+        padding: const EdgeInsets.only(top: 25.0, left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n-              Text(\"$data\",style: const TextStyle(color: Colors.amber, fontSize: 23.0),),\r\n-              IconButton(onPressed: (){}, icon: const Icon(Icons.menu))\r\n-            ],),\r\n-         \r\n+                Text(\r\n+                  \"$data\",\r\n+                  style: const TextStyle(color: Colors.amber, fontSize: 23.0),\r\n+                ),\r\n+                IconButton(onPressed: () {}, icon: const Icon(Icons.menu))\r\n+              ],\r\n+            ),\r\n             FutureBuilder(\r\n                 future: getData(),\r\n                 builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n                   if (snapshot.connectionState == ConnectionState.done) {\r\n@@ -61,12 +63,24 @@\n                               borderRadius: BorderRadius.circular(25.0)),\r\n                           child: Padding(\r\n                             padding: const EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                                child: Text(\r\n-                               allData[index].toString(),\r\n-                              style: TextStyle(\r\n-                                  color: Colors.brown.shade900, fontSize: 20.0),\r\n+                            child: GestureDetector(\r\n+                              onLongPress: () {\r\n+                                Clipboard.setData(\r\n+                                    const ClipboardData(text: \"data\"));\r\n+                                ScaffoldMessenger.of(context).showSnackBar(\r\n+                                  const SnackBar(\r\n+                                    content: Text(\"Text copied to clipboard\"),\r\n+                                  ),\r\n+                                );\r\n+                              },\r\n+                              child: Text(\r\n+                                allData[index].toString(),\r\n+                                style: TextStyle(\r\n+                                    color: Colors.brown.shade900,\r\n+                                    fontSize: 20.0),\r\n+                              ),\r\n                             ),\r\n                           ),\r\n                         );\r\n                       },\r\n@@ -74,18 +88,20 @@\n                       itemCount: allData.length,\r\n                       itemWidth: MediaQuery.of(context).size.width * 1,\r\n                       itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                       layout: SwiperLayout.TINDER,\r\n-                      pagination: const SwiperPagination(alignment: Alignment.bottomCenter),\r\n+                      pagination: const SwiperPagination(\r\n+                          alignment: Alignment.bottomCenter),\r\n                       // control: SwiperControl(),\r\n                     );\r\n                   } else if (snapshot.connectionState == ConnectionState.none) {\r\n                     return const Text(\"No data\");\r\n                   }\r\n                   return const Center(child: CircularProgressIndicator());\r\n                 }),\r\n-\r\n-                SizedBox(height: 45.0,), \r\n+            SizedBox(\r\n+              height: 45.0,\r\n+            ),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n@@ -104,5 +120,4 @@\n     });\r\n     return dataofItem;\r\n   }\r\n }\r\n-\r\n"
                },
                {
                    "date": 1646576691427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'dart:ui';\r\n \r\n import 'package:card_swiper/card_swiper.dart';\r\n+import 'package:clipboard/clipboard.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n \r\n@@ -65,10 +66,9 @@\n                             padding: const EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                             child: GestureDetector(\r\n                               onLongPress: () {\r\n-                                Clipboard.setData(\r\n-                                    const ClipboardData(text: \"data\"));\r\n+                               FlutterClipboard.copy('hello flutter friends').then(( value ) => \r\n                                 ScaffoldMessenger.of(context).showSnackBar(\r\n                                   const SnackBar(\r\n                                     content: Text(\"Text copied to clipboard\"),\r\n                                   ),\r\n"
                },
                {
                    "date": 1646576729464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,10 +70,10 @@\n                                FlutterClipboard.copy('hello flutter friends').then(( value ) => \r\n                                 ScaffoldMessenger.of(context).showSnackBar(\r\n                                   const SnackBar(\r\n                                     content: Text(\"Text copied to clipboard\"),\r\n-                                  ),\r\n-                                );\r\n+                                  )));\r\n+                                \r\n                               },\r\n                               child: Text(\r\n                                 allData[index].toString(),\r\n                                 style: TextStyle(\r\n"
                },
                {
                    "date": 1646576750434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,14 +66,15 @@\n                             padding: const EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n                             child: GestureDetector(\r\n                               onLongPress: () {\r\n-                               FlutterClipboard.copy('hello flutter friends').then(( value ) => \r\n-                                ScaffoldMessenger.of(context).showSnackBar(\r\n-                                  const SnackBar(\r\n-                                    content: Text(\"Text copied to clipboard\"),\r\n-                                  )));\r\n-                                \r\n+                                FlutterClipboard.copy(allData[index].toString(),)\r\n+                                    .then((value) =>\r\n+                                        ScaffoldMessenger.of(context)\r\n+                                            .showSnackBar(const SnackBar(\r\n+                                          content:\r\n+                                              Text(\"Text copied to clipboard\"),\r\n+                                        )));\r\n                               },\r\n                               child: Text(\r\n                                 allData[index].toString(),\r\n                                 style: TextStyle(\r\n"
                },
                {
                    "date": 1646576811081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,11 +69,11 @@\n                               onLongPress: () {\r\n                                 FlutterClipboard.copy(allData[index].toString(),)\r\n                                     .then((value) =>\r\n                                         ScaffoldMessenger.of(context)\r\n-                                            .showSnackBar(const SnackBar(\r\n+                                            .showSnackBar( SnackBar(\r\n                                           content:\r\n-                                              Text(\"Text copied to clipboard\"),\r\n+                                              Text(\"$value\"),\r\n                                         )));\r\n                               },\r\n                               child: Text(\r\n                                 allData[index].toString(),\r\n"
                },
                {
                    "date": 1646576901185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n                                     .then((value) =>\r\n                                         ScaffoldMessenger.of(context)\r\n                                             .showSnackBar( SnackBar(\r\n                                           content:\r\n-                                              Text(\"$value\"),\r\n+                                              Text(\"copied\"),\r\n                                         )));\r\n                               },\r\n                               child: Text(\r\n                                 allData[index].toString(),\r\n"
                },
                {
                    "date": 1646577182232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,11 +42,11 @@\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n                 Text(\r\n                   \"$data\",\r\n-                  style: const TextStyle(color: Colors.amber, fontSize: 23.0),\r\n+                  style: const TextStyle(color: Colors.amber, fontSize: 21.0),\r\n                 ),\r\n-                IconButton(onPressed: () {}, icon: const Icon(Icons.menu))\r\n+                IconButton(onPressed: () {}, icon: const Icon(Icons.menu),iconSize: 18.0,color: Colors.amber,)\r\n               ],\r\n             ),\r\n             FutureBuilder(\r\n                 future: getData(),\r\n"
                },
                {
                    "date": 1646577321664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n                 Text(\r\n                   \"$data\",\r\n                   style: const TextStyle(color: Colors.amber, fontSize: 21.0),\r\n                 ),\r\n-                IconButton(onPressed: () {}, icon: const Icon(Icons.menu),iconSize: 18.0,color: Colors.amber,)\r\n+                IconButton(onPressed: () {}, icon: const Icon(Icons.menu),iconSize: 21.0,color: Colors.amber,)\r\n               ],\r\n             ),\r\n             FutureBuilder(\r\n                 future: getData(),\r\n"
                },
                {
                    "date": 1646577336092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n               //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: [\r\n                 Text(\r\n                   \"$data\",\r\n-                  style: const TextStyle(color: Colors.amber, fontSize: 21.0),\r\n+                  style: const TextStyle(color: Colors.amber, fontSize: 20.0),\r\n                 ),\r\n                 IconButton(onPressed: () {}, icon: const Icon(Icons.menu),iconSize: 21.0,color: Colors.amber,)\r\n               ],\r\n             ),\r\n"
                },
                {
                    "date": 1646577390554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n                       itemWidth: MediaQuery.of(context).size.width * 1,\r\n                       itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                       layout: SwiperLayout.TINDER,\r\n                       pagination: const SwiperPagination(\r\n-                          alignment: Alignment.bottomCenter),\r\n+                          alignment: Alignment.center),\r\n                       // control: SwiperControl(),\r\n                     );\r\n                   } else if (snapshot.connectionState == ConnectionState.none) {\r\n                     return const Text(\"No data\");\r\n"
                },
                {
                    "date": 1646577539305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                               borderRadius: BorderRadius.circular(25.0)),\r\n                           child: Padding(\r\n                             padding: const EdgeInsets.only(\r\n                                 top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child: GestureDetector(\r\n+                            child: InkWell(\r\n                               onLongPress: () {\r\n                                 FlutterClipboard.copy(allData[index].toString(),)\r\n                                     .then((value) =>\r\n                                         ScaffoldMessenger.of(context)\r\n"
                },
                {
                    "date": 1646578068679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,10 +89,10 @@\n                       itemCount: allData.length,\r\n                       itemWidth: MediaQuery.of(context).size.width * 1,\r\n                       itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                       layout: SwiperLayout.TINDER,\r\n-                      pagination: const SwiperPagination(\r\n-                          alignment: Alignment.center),\r\n+                      pagination:  SwiperPagination(\r\n+                          alignment: Alignment.bottomCenter),\r\n                       // control: SwiperControl(),\r\n                     );\r\n                   } else if (snapshot.connectionState == ConnectionState.none) {\r\n                     return const Text(\"No data\");\r\n"
                },
                {
                    "date": 1646578095426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: const Color(0xFF1e3d59),\r\n       body: Padding(\r\n-        padding: const EdgeInsets.only(top: 25.0, left: 15.0),\r\n+        padding:  EdgeInsets.only(top: 25.0, left: 15.0),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n           mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n"
                },
                {
                    "date": 1646579112281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n+import 'dart:io';\r\n import 'dart:ui';\r\n \r\n import 'package:card_swiper/card_swiper.dart';\r\n import 'package:clipboard/clipboard.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n-\r\n+import 'package:facebook_audience_network/facebook_audience_network.dart';\r\n import '../themeclass.dart';\r\n \r\n class ThoughtsScreen extends StatefulWidget {\r\n   ThoughtsScreen({Key? key, required this.name}) : super(key: key);\r\n@@ -101,8 +102,9 @@\n                 }),\r\n             SizedBox(\r\n               height: 45.0,\r\n             ),\r\n+          showAds(),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n@@ -120,5 +122,33 @@\n       });\r\n     });\r\n     return dataofItem;\r\n   }\r\n+\r\n+  showAds() {\r\n+\r\n+\r\n+   return  Container(\r\n+  alignment: Alignment(0.5, 1),\r\n+  child: FacebookBannerAd(\r\n+    placementId: Platform.isAndroid ? \"YOUR_ANDROID_PLACEMENT_ID\" : \"YOUR_IOS_PLACEMENT_ID\",\r\n+    bannerSize: BannerSize.STANDARD,\r\n+    listener: (result, value) {\r\n+      switch (result) {\r\n+        case BannerAdResult.ERROR:\r\n+          print(\"Error: $value\");\r\n+          break;\r\n+        case BannerAdResult.LOADED:\r\n+          print(\"Loaded: $value\");\r\n+          break;\r\n+        case BannerAdResult.CLICKED:\r\n+          print(\"Clicked: $value\");\r\n+          break;\r\n+        case BannerAdResult.LOGGING_IMPRESSION:\r\n+          print(\"Logging Impression: $value\");\r\n+          break;\r\n+      }\r\n+    },\r\n+  ),\r\n+);\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1646579455483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n                       },\r\n \r\n                       itemCount: allData.length,\r\n                       itemWidth: MediaQuery.of(context).size.width * 1,\r\n-                      itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n+                      itemHeight: MediaQuery.of(context).size.height * 0.4,\r\n                       layout: SwiperLayout.TINDER,\r\n                       pagination:  SwiperPagination(\r\n                           alignment: Alignment.bottomCenter),\r\n                       // control: SwiperControl(),\r\n"
                },
                {
                    "date": 1646579693658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: const Color(0xFF1e3d59),\r\n       body: Padding(\r\n-        padding:  EdgeInsets.only(top: 25.0, left: 15.0),\r\n+        padding:  EdgeInsets.only(top: 25.0,),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n           mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n@@ -90,10 +90,10 @@\n                       itemCount: allData.length,\r\n                       itemWidth: MediaQuery.of(context).size.width * 1,\r\n                       itemHeight: MediaQuery.of(context).size.height * 0.4,\r\n                       layout: SwiperLayout.TINDER,\r\n-                      pagination:  SwiperPagination(\r\n-                          alignment: Alignment.bottomCenter),\r\n+                    //  pagination:  SwiperPagination(\r\n+                      //    alignment: Alignment.bottomCenter),\r\n                       // control: SwiperControl(),\r\n                     );\r\n                   } else if (snapshot.connectionState == ConnectionState.none) {\r\n                     return const Text(\"No data\");\r\n"
                },
                {
                    "date": 1646579713604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,10 +90,10 @@\n                       itemCount: allData.length,\r\n                       itemWidth: MediaQuery.of(context).size.width * 1,\r\n                       itemHeight: MediaQuery.of(context).size.height * 0.4,\r\n                       layout: SwiperLayout.TINDER,\r\n-                    //  pagination:  SwiperPagination(\r\n-                      //    alignment: Alignment.bottomCenter),\r\n+                     pagination:  SwiperPagination(\r\n+                         alignment: Alignment.bottomCenter),\r\n                       // control: SwiperControl(),\r\n                     );\r\n                   } else if (snapshot.connectionState == ConnectionState.none) {\r\n                     return const Text(\"No data\");\r\n"
                },
                {
                    "date": 1646579995113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: const Color(0xFF1e3d59),\r\n       body: Padding(\r\n-        padding:  EdgeInsets.only(top: 25.0,),\r\n+        padding:  EdgeInsets.only(top: 0.0,),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n           mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n@@ -88,9 +88,9 @@\n                       },\r\n \r\n                       itemCount: allData.length,\r\n                       itemWidth: MediaQuery.of(context).size.width * 1,\r\n-                      itemHeight: MediaQuery.of(context).size.height * 0.4,\r\n+                      itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n                       layout: SwiperLayout.TINDER,\r\n                      pagination:  SwiperPagination(\r\n                          alignment: Alignment.bottomCenter),\r\n                       // control: SwiperControl(),\r\n"
                },
                {
                    "date": 1646580167920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,82 +31,80 @@\n     int length;\r\n     print(\"categeory $data\");\r\n     return Scaffold(\r\n       backgroundColor: const Color(0xFF1e3d59),\r\n-      body: Padding(\r\n-        padding:  EdgeInsets.only(top: 0.0,),\r\n-        child: Column(\r\n-          crossAxisAlignment: CrossAxisAlignment.start,\r\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-          children: [\r\n-            Row(\r\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-              //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n-              children: [\r\n-                Text(\r\n-                  \"$data\",\r\n-                  style: const TextStyle(color: Colors.amber, fontSize: 20.0),\r\n-                ),\r\n-                IconButton(onPressed: () {}, icon: const Icon(Icons.menu),iconSize: 21.0,color: Colors.amber,)\r\n-              ],\r\n-            ),\r\n-            FutureBuilder(\r\n-                future: getData(),\r\n-                builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n-                  if (snapshot.connectionState == ConnectionState.done) {\r\n-                    return Swiper(\r\n-                      itemBuilder: (BuildContext context, int index) {\r\n-                        //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n+      body: Column(\r\n+        crossAxisAlignment: CrossAxisAlignment.start,\r\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+        children: [\r\n+          SizedBox(height: 15.0,)\r\n+          Row(\r\n+            mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+            //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n+            children: [\r\n+              Text(\r\n+                \"$data\",\r\n+                style: const TextStyle(color: Colors.amber, fontSize: 20.0),\r\n+              ),\r\n+              IconButton(onPressed: () {}, icon: const Icon(Icons.menu),iconSize: 21.0,color: Colors.amber,)\r\n+            ],\r\n+          ),\r\n+          FutureBuilder(\r\n+              future: getData(),\r\n+              builder: (context, AsyncSnapshot<QuerySnapshot?> snapshot) {\r\n+                if (snapshot.connectionState == ConnectionState.done) {\r\n+                  return Swiper(\r\n+                    itemBuilder: (BuildContext context, int index) {\r\n+                      //  //  allData = snapshot.data?.docs[index].data()[\"item_text_\"];\r\n \r\n-                        return Container(\r\n-                          decoration: BoxDecoration(\r\n-                              color: Color(0xFFf5f0e1),\r\n-                              border: Border.all(\r\n-                                  color: Colors.amber.shade900, width: 3),\r\n-                              borderRadius: BorderRadius.circular(25.0)),\r\n-                          child: Padding(\r\n-                            padding: const EdgeInsets.only(\r\n-                                top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n-                            child: InkWell(\r\n-                              onLongPress: () {\r\n-                                FlutterClipboard.copy(allData[index].toString(),)\r\n-                                    .then((value) =>\r\n-                                        ScaffoldMessenger.of(context)\r\n-                                            .showSnackBar( SnackBar(\r\n-                                          content:\r\n-                                              Text(\"copied\"),\r\n-                                        )));\r\n-                              },\r\n-                              child: Text(\r\n-                                allData[index].toString(),\r\n-                                style: TextStyle(\r\n-                                    color: Colors.brown.shade900,\r\n-                                    fontSize: 20.0),\r\n-                              ),\r\n+                      return Container(\r\n+                        decoration: BoxDecoration(\r\n+                            color: Color(0xFFf5f0e1),\r\n+                            border: Border.all(\r\n+                                color: Colors.amber.shade900, width: 3),\r\n+                            borderRadius: BorderRadius.circular(25.0)),\r\n+                        child: Padding(\r\n+                          padding: const EdgeInsets.only(\r\n+                              top: 8.0, left: 5.0, right: 5.0, bottom: 8.0),\r\n+                          child: InkWell(\r\n+                            onLongPress: () {\r\n+                              FlutterClipboard.copy(allData[index].toString(),)\r\n+                                  .then((value) =>\r\n+                                      ScaffoldMessenger.of(context)\r\n+                                          .showSnackBar( SnackBar(\r\n+                                        content:\r\n+                                            Text(\"copied\"),\r\n+                                      )));\r\n+                            },\r\n+                            child: Text(\r\n+                              allData[index].toString(),\r\n+                              style: TextStyle(\r\n+                                  color: Colors.brown.shade900,\r\n+                                  fontSize: 20.0),\r\n                             ),\r\n                           ),\r\n-                        );\r\n-                      },\r\n+                        ),\r\n+                      );\r\n+                    },\r\n \r\n-                      itemCount: allData.length,\r\n-                      itemWidth: MediaQuery.of(context).size.width * 1,\r\n-                      itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n-                      layout: SwiperLayout.TINDER,\r\n-                     pagination:  SwiperPagination(\r\n-                         alignment: Alignment.bottomCenter),\r\n-                      // control: SwiperControl(),\r\n-                    );\r\n-                  } else if (snapshot.connectionState == ConnectionState.none) {\r\n-                    return const Text(\"No data\");\r\n-                  }\r\n-                  return const Center(child: CircularProgressIndicator());\r\n-                }),\r\n-            SizedBox(\r\n-              height: 45.0,\r\n-            ),\r\n-          showAds(),\r\n-          ],\r\n-        ),\r\n+                    itemCount: allData.length,\r\n+                    itemWidth: MediaQuery.of(context).size.width * 1,\r\n+                    itemHeight: MediaQuery.of(context).size.height * 0.5,\r\n+                    layout: SwiperLayout.TINDER,\r\n+                   pagination:  SwiperPagination(\r\n+                       alignment: Alignment.bottomCenter),\r\n+                    // control: SwiperControl(),\r\n+                  );\r\n+                } else if (snapshot.connectionState == ConnectionState.none) {\r\n+                  return const Text(\"No data\");\r\n+                }\r\n+                return const Center(child: CircularProgressIndicator());\r\n+              }),\r\n+          SizedBox(\r\n+            height: 45.0,\r\n+          ),\r\n+        showAds(),\r\n+        ],\r\n       ),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1646580184908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n       body: Column(\r\n         crossAxisAlignment: CrossAxisAlignment.start,\r\n         mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n         children: [\r\n-          SizedBox(height: 15.0,)\r\n+          SizedBox(height: 5.0,),\r\n           Row(\r\n             mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n             //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n             children: [\r\n"
                },
                {
                    "date": 1646580193739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n       body: Column(\r\n         crossAxisAlignment: CrossAxisAlignment.start,\r\n         mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n         children: [\r\n-          SizedBox(height: 5.0,),\r\n+          SizedBox(height: 1.0,),\r\n           Row(\r\n             mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n             //crossAxisAlignment: CrossAxisAlignment.stretch,\r\n             children: [\r\n"
                }
            ],
            "date": 1645280610194,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\n\r\nclass ThoughtsScreen extends StatefulWidget {\r\n  ThoughtsScreen({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<ThoughtsScreen> createState() => _ThoughtsScreenState();\r\n}\r\n\r\nclass _ThoughtsScreenState extends State<ThoughtsScreen> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}"
        }
    ]
}